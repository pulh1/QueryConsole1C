
&НаКлиенте
Процедура СгенерироватьFeatureФайлыПроверкиРезультатовЗапросов(Команда)
	Каталог = Новый Файл(ПутьКФайлу);
	Если Не Каталог.ЭтоКаталог() Тогда
		ВызватьИсключение "Ожидается путь к каталогу с запросами";
	КонецЕсли; 
	ФайлыЗапросов = НайтиФайлы(ПутьКФайлу, "*.q1c", Ложь);
	Для Каждого Файл Из ФайлыЗапросов Цикл
		ДвоичныеДанные = Новый ДвоичныеДанные(Файл.ПолноеИмя);
		Если Не ЭтоЗапросПолученияДанных(ДвоичныеДанные) Тогда
			Продолжить;
		КонецЕсли;
		СгенерироватьFeatureФайлПроверкиРезультатаЗапросаНаКлиенте(Файл.ПолноеИмя);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьFeatureФайлПроверкиРезультатаЗапроса(Команда)
	Файл = Новый Файл(ПутьКФайлу);
	ИмяФайлаИсходника = Файл.ИмяБезРасширения;
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ПутьКФайлу);
	Если Не ЭтоЗапросПолученияДанных(ДвоичныеДанные) Тогда
		ВызватьИсключение "Тест получения данных не может быть сгенерирован для запросов создания и удаления временных таблиц";
	КонецЕсли;
	СгенерироватьFeatureФайлПроверкиРезультатаЗапросаНаКлиенте(ПутьКФайлу);
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьFeatureФайлыСозданияЗапросов(Команда)
	Каталог = Новый Файл(ПутьКФайлу);
	Если Не Каталог.ЭтоКаталог() Тогда
		ВызватьИсключение "Ожидается путь к каталогу с запросами";
	КонецЕсли; 
	ФайлыЗапросов = НайтиФайлы(ПутьКФайлу, "*.q1c", Ложь);
	Для Каждого Файл Из ФайлыЗапросов Цикл
		СгенерироватьFeatureФайлСозданияЗапросаНаКлиенте(Файл.ПолноеИмя);
	КонецЦикла;	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КодFeatureФайла(Знач Запрос, Знач ИмяЗапроса)
	ТекДок = Новый ТекстовыйДокумент();
	ТекДок.ДобавитьСтроку("#language: ru");
	ТекДок.ДобавитьСтроку("");
	ТекДок.ДобавитьСтроку("@tree");
	ТекДок.ДобавитьСтроку("");
	ТекДок.ДобавитьСтроку("Функционал: Создание запроса""" +  ИмяЗапроса + """ в конструкторе");
	ТекДок.ДобавитьСтроку("");
	ТекДок.ДобавитьСтроку("Как Администратор я хочу");
	ТекДок.ДобавитьСтроку("создать запрос в конструкторе");
	ТекДок.ДобавитьСтроку("чтобы получить нужные данные");
	ТекДок.ДобавитьСтроку("");
	ТекДок.ДобавитьСтроку("Контекст:");
	ТекДок.ДобавитьСтроку("	И я закрыл все окна клиентского приложения");
	ТекДок.ДобавитьСтроку("	И Я запускаю сценарий открытия TestClient или подключаю уже существующий");
	ТекДок.ДобавитьСтроку("	И я закрыл все окна клиентского приложения");
	ТекДок.ДобавитьСтроку("Сценарий: создание запроса " + ИмяЗапроса);
	ТекДок.ДобавитьСтроку("	И Я открываю консоль запросов");
	ТекДок.ДобавитьСтроку("	И Я открываю конструктор запросов");	
	
	УстановитьПривилегированныйРежим(Истина);
	Генератор = Обработки.ГенераторFeatureФайлов.Создать();
	УстановитьПривилегированныйРежим(Ложь);	
	Генератор.УстановитьТекстовыйДокумент(ТекДок);
	Генератор.СценарийСозданияПакетаЗапросаВТекДок(Запрос, Символы.Таб);
	ТекДок.ДобавитьСтроку(Символы.Таб + "И Я завершаю редактирование текущего запроса в конструкторе");
	
	Возврат ТекДок;
КонецФункции

&НаСервереБезКонтекста
Функция СгенерироватьФайлыДляТестаНаСервере(Знач ТекстЗапроса, Знач ИмяФайлаИсходника)
	КодFeatureФайла = КодFeatureФайла(ТекстЗапроса, ИмяФайлаИсходника);
	КодFeatureФайла.ДобавитьСтроку("	* Проверка результата создания запроса");
	КодFeatureФайла.ДобавитьСтроку("		Тогда Текст запроса в консоли соответствует эталону ""files/" 
		+ ИмяФайлаИсходника + ".txt""");	
	
	Возврат КодFeatureФайла;
КонецФункции

&НаКлиенте
Процедура СгенерироватьFeatureФайлСозданияЗапроса(Команда)
	СгенерироватьFeatureФайлСозданияЗапросаНаКлиенте(ПутьКФайлу);
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьFeatureФайлСозданияЗапросаНаКлиенте(ПолноеИмяФайла)
	Файл = Новый Файл(ПолноеИмяФайла);
	ИмяФайлаИсходника = Файл.ИмяБезРасширения;
	
	ТекстЗапроса = ТекстЗапросаИзФайла(ПолноеИмяФайла);
	КодFeatureФайла = СгенерироватьФайлыДляТестаНаСервере(ТекстЗапроса, ИмяФайлаИсходника);
	
	КодFeatureФайла.Записать(ПутьККаталогуТестов + "\" + ИмяФайлаИсходника + ".feature");
	
	ТекДок = Новый ТекстовыйДокумент();
	ТекДок.УстановитьТекст(ТекстЗапроса);
	ТекДок.Записать(ПутьККаталогуТестов + "\files\" + ИмяФайлаИсходника + ".txt");
КонецПроцедуры

&НаКлиенте
Функция ТекстЗапросаИзФайла(ПолноеИмяФайла)
	Файл = Новый Файл(ПолноеИмяФайла);
	Если Файл.Расширение = ".q1c" Тогда
		ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяФайла);
		Запрос = ТекстЗапросаИзФайлаНаСервере(ДвоичныеДанные);
	Иначе
		Запрос = "";
	КонецЕсли;
	
	Возврат Запрос;
КонецФункции

&НаСервереБезКонтекста
Функция ТекстЗапросаИзФайлаНаСервере(Знач ДвоичныеДанные)
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Обработки.КонсольЗапросов.Создать().ПрочитатьЗапросыИзФайлаXML(ДвоичныеДанные).Запросы[0].Текст;
	УстановитьПривилегированныйРежим(Ложь);	

	Возврат Запрос;
КонецФункции

&НаСервереБезКонтекста
Функция ПараметрыЗапросаИзФайлаНаСервере(Знач ДвоичныеДанные)
	ПараметрыЗапроса = Новый Структура();
	
	УстановитьПривилегированныйРежим(Истина);
	Обработка = Обработки.КонсольЗапросов.Создать().ПрочитатьЗапросыИзФайлаXML(ДвоичныеДанные);
	УстановитьПривилегированныйРежим(Ложь);	
	
	Для каждого ЭлементПараметр Из Обработка.Параметры Цикл
		СтрокаЗначение = ЭлементПараметр.Значение;
		Если ПустаяСтрока(СтрокаЗначение) Тогда
			Значение = Неопределено;
		Иначе
			Значение = ЗначениеИзСтрокиВнутр(СтрокаЗначение);
		КонецЕсли;
		ПараметрыЗапроса.Вставить(ЭлементПараметр.Имя, Значение);
	КонецЦикла;
	
	Возврат ПараметрыЗапроса;
КонецФункции

&НаКлиенте
Процедура СгенерироватьFeatureФайлПроверкиРезультатаЗапросаНаКлиенте(ПолноеИмяФайла)
	Файл = Новый Файл(ПолноеИмяФайла);
	ИмяФайлаИсходника = Файл.ИмяБезРасширения;
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяФайла);
	
	РезультатJson = РезультатВыполненияЗапросаJson(ДвоичныеДанные);
	
	ИмяФайлаЭталона = "files\" + ИмяФайлаИсходника + "Эталон.JSON";
	ИмяФайлаЗапроса = "files\" + ИмяФайлаИсходника + "Запрос.q1c";
	
	РезультатJson.Записать(ПутьККаталогуТестов + "\" + ИмяФайлаЭталона);
	ДвоичныеДанные.Записать(ПутьККаталогуТестов + "\" + ИмяФайлаЗапроса);
	
	FeatureФайл = FeatureФайлПроверкиРезультатаЗапрсаВКонсоли(ИмяФайлаИсходника, ИмяФайлаЗапроса, ИмяФайлаЭталона);
	FeatureФайл.Записать(ПутьККаталогуТестов + "\" + ИмяФайлаИсходника + ".feature");	
КонецПроцедуры

&НаСервере
Функция РезультатВыполненияЗапросаJson(Знач ДвоичныеДанные)
	ТекстЗапроса = ТекстЗапросаИзФайлаНаСервере(ДвоичныеДанные);
	ПараметрыЗапроса = ПараметрыЗапросаИзФайлаНаСервере(ДвоичныеДанные);
	
	Результат = ИсполнительПредставлений.ВыполнитьПакетЗапросов(ТекстЗапроса, ПараметрыЗапроса);
	ТаблицаРезультата = Результат[Результат.ВГраница()].Выгрузить();
	
	КолонкиЗапроса = Новый Массив();
	Для Каждого Колонка Из ТаблицаРезультата.Колонки Цикл
		КолонкиЗапроса.Добавить(Колонка.Имя);
	КонецЦикла;
	
	СериализуемыйРезультат = Новый Массив();
	
	Для Каждого СтрокаТаблицы Из ТаблицаРезультата Цикл
		Соответствие = Новый Соответствие();
		Для Каждого Колонка Из КолонкиЗапроса Цикл
			Соответствие[Колонка] = Формат(СтрокаТаблицы[Колонка], "Л=ru_RU;");
		КонецЦикла;
		СериализуемыйРезультат.Добавить(Соответствие);
	КонецЦикла;
	
	ЗаписьJson = Новый ЗаписьJSON();
	ЗаписьJson.УстановитьСтроку();
	
	ЗаписатьJSON(ЗаписьJson, СериализуемыйРезультат);
	
	СтрокаJson = ЗаписьJson.Закрыть();
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.УстановитьТекст(СтрокаJson);
	
	Возврат ТекстовыйДокумент;
КонецФункции

&НаСервере
Функция ЭтоЗапросПолученияДанных(ДвоичныеДанные)
	ТекстЗапроса = ТекстЗапросаИзФайлаНаСервере(ДвоичныеДанные);
	МодельЗапроса = ОбработкаМоделиЗапроса.РазобратьЗапрос(ТекстЗапроса);
	ПоследнийЗапрос = МодельЗапроса.Элементы[МодельЗапроса.Элементы.ВГраница()];
	Возврат ПоследнийЗапрос.Тип = "ЗапросВыбора"
		И Не ЗначениеЗаполнено(ПоследнийЗапрос.ТаблицаДляПомещения);
КонецФункции

&НаКлиенте
Функция FeatureФайлПроверкиРезультатаЗапрсаВКонсоли(ИмяЗапроса, ИмяФайлаЗапроса, ИмяФайлаЭталона)
	Текст = "Функционал: Выполнение запроса """ + ИмяЗапроса + """ в консоли
	|
	|Как Администратор я хочу
	|выполнить запрос в конструкторе
	|чтобы получить нужные данные
	|
	|Контекст:
	|	И я закрыл все окна клиентского приложения
	|	И Я запускаю сценарий открытия TestClient или подключаю уже существующий
	|	И я закрыл все окна клиентского приложения
	|Сценарий: Выполнение запроса " + ИмяЗапроса + "
	|	И Я открываю консоль запросов
	|	И Я открываю файл """ + ИмяФайлаЗапроса + """ запроса в консоли
	|	И Я выполняю запрос в консоли
	|	И Я сравниваю результат выполнения запроса в консоли с эталоном из файла """ + ИмяФайлаЭталона + """";
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент();
	ТекстовыйДокумент.УстановитьТекст(Текст);
	
	Возврат ТекстовыйДокумент;
КонецФункции
