
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИмяТаблицы = Параметры.ИмяТаблицы;
	Если ЗначениеЗаполнено(Параметры.АдресСпискаПолей) Тогда
		ПоляВТ = ПолучитьИзВременногоХранилища(Параметры.АдресСпискаПолей);
		
		Для Каждого Поле Из ПоляВТ Цикл
			СтрокаТаблицы = Поля.Добавить();
			СтрокаТаблицы.Имя = Поле.Имя;
			Если Не МодельЗапросаТипы.ЭтоПолеТипа(Поле.ТипЗначения, МодельЗапросаТипы.ОписаниеПроивзольногоТипа()) Тогда
				СтрокаТаблицы.ТипЗначения = Поле.ТипЗначения;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура OK(Команда)
	ПроверитьЗаполнение();
	ОписаниеВременнойТаблицыВоВременноеХранилище();
	
	ПараметрыЗакрытия = ПараметрыЗакрытия(); 
	
	ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗакрытии, ПараметрыЗакрытия);
	
	Закрыть();	
КонецПроцедуры

Функция ПараметрыЗакрытия()
	ПараметрыЗакрытия = Новый Структура();
	ПараметрыЗакрытия.Вставить("Модифицированность", Модифицированность);	
	ПараметрыЗакрытия.Вставить("АдресОписанияВТ", ОписаниеВременнойТаблицыВоВременноеХранилище());	
	
	Возврат ПараметрыЗакрытия;
КонецФункции

Функция ОписаниеВременнойТаблицыВоВременноеХранилище()
	ОписаниеВТ = ЭлементыМоделиЗапроса.НовыйОписаниеВременнойТаблицы();
	
	Для Каждого Поле Из Поля Цикл
		ОписаниеВТ.ПорядокКолонок.Добавить(Поле.Имя);
		Если Поле.ТипЗначения.Типы().Количество() = 0 Тогда
			Тип = МодельЗапросаТипы.ОписаниеПроивзольногоТипа();
		Иначе
			Тип = Поле.ТипЗначения;
		КонецЕсли;
		ОписаниеВТ.Колонки.Вставить(ВРег(Поле.Имя), Тип);
	КонецЦикла;
	
	ОписаниеВТ.СозданаВЭтомПакете = Ложь;
	ОписаниеВТ.Имя = ИмяТаблицы;
	
	Возврат ПоместитьВоВременноеХранилище(ОписаниеВТ);
КонецФункции


