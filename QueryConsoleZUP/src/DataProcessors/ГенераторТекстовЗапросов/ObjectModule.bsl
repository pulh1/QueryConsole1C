
#Если Не (ТолстыйКлиентУправляемоеПриложение) Тогда

Перем ЗапросВыбора; 
Перем МассивСтрок;
Перем ГенераторТекстовВыражений;

#Область СлужебныйПрограммныйИнтерфейс

Процедура УстановитьЗапрос(УстаналиваемыйЗапрос) Экспорт
	ЗапросВыбора = УстаналиваемыйЗапрос;
КонецПроцедуры

Процедура УстановитьГенераторТекстовВыражений(Генератор) Экспорт
	ГенераторТекстовВыражений = Генератор;
КонецПроцедуры

Процедура УстановитьМассивСтрок(УстаналиваемыйМассив) Экспорт
	МассивСтрок = УстаналиваемыйМассив;
КонецПроцедуры

// Запрос выбора в массив строк.
// 
// Параметры:
//  Табуляции - Строка - Табуляции
Процедура ЗапросВыбораВМассивСтрок(Знач Табуляции = "") Экспорт
	ГенераторТекстовВыражений.УстановитьКолонки(ЗапросВыбора.Колонки);
	
	ЭтоПервыйОператор = Истина;
	Индекс = 0;
	Для Каждого ТекущийОператор Из ЗапросВыбора.Операторы Цикл
		Если ЭтоПервыйОператор Тогда
			ЭтоПервыйОператор = Ложь;
		Иначе
			МассивСтрок.Добавить(Символы.ПС);
			МассивСтрок.Добавить(Символы.ПС);
			МассивСтрок.Добавить(Табуляции);
			МассивСтрок.Добавить("ОБЪЕДИНИТЬ");
			Если ТекущийОператор.ТипОбъединения = "ОбъединитьВсе" Тогда
				МассивСтрок.Добавить(" ВСЕ");
			КонецЕсли;
			МассивСтрок.Добавить(Символы.ПС);
			МассивСтрок.Добавить(Символы.ПС);
		КонецЕсли;	
		ОператорЗапросаВМассивСтрок(ЗапросВыбора, Индекс, Табуляции);
		Индекс = Индекс +1;
	КонецЦикла;		
		
	Если ЗапросВыбора.Порядок.Количество() > 0 Тогда
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(Табуляции);
		МассивСтрок.Добавить("УПОРЯДОЧИТЬ ПО");
		МассивСтрок.Добавить(Символы.ПС);
		ТекущиеТабуляции = Табуляции + Символы.Таб;
		СписокВыраженийУпорядовачиванияВМассивСтрок(ЗапросВыбора.Порядок, ТекущиеТабуляции);
	КонецЕсли;
	
	Если ЗапросВыбора.Автопорядок Тогда
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(Табуляции);
		МассивСтрок.Добавить("АВТОУПОРЯДОЧИВАНИЕ");
	КонецЕсли;
	
	Если ЗапросВыбора.Индекс.Элементы.Количество() > 0 Тогда
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить("ИНДЕКСИРОВАТЬ ПО");
		МассивСтрок.Добавить(Табуляции);
		ТекущиеТабуляции = Табуляции + Символы.Таб;
		ГенераторТекстовВыражений.СписокВыраженийВВМассивСтрокСПереносами(ЗапросВыбора.Индекс.Элементы, ТекущиеТабуляции);
	КонецЕсли;	
	
	ИтогиВМассивСтрок(Табуляции);
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Оператор запроса в массив строк.
// 
// Параметры:
//  МассивСтрок - Массив из Строка
//  ЗапросВыбора - см. ЭлементыМоделиЗапроса.НовыйЗапросВыбора
//  ИндексОператора - Число - Индекс оператора
//  Табуляции - Строка
Процедура ОператорЗапросаВМассивСтрок(ЗапросВыбора, ИндексОператора, Табуляции)
	// TODO учитывать свойства запроса типо таблицы для помешения, ВыбиратьРазрешенные
	
	ОператорЗапроса = ЗапросВыбора.Операторы[ИндексОператора];
	
//	МассивСтрок.Добавить(Табуляции);
	МассивСтрок.Добавить("ВЫБРАТЬ");
	Если ЗапросВыбора.ВыбиратьРазрешенные И ИндексОператора = 0 Тогда
		МассивСтрок.Добавить(" РАЗРЕШЕННЫЕ");
	КонецЕсли;
	
	Если ОператорЗапроса.ВыбиратьРазличные Тогда
		МассивСтрок.Добавить(" РАЗЛИЧНЫЕ");
	КонецЕсли;
	
	Если ОператорЗапроса.КоличествоПолучаемыхЗаписей <> Неопределено Тогда
		МассивСтрок.Добавить(" ПЕРВЫЕ ");
		МассивСтрок.Добавить(Формат(ОператорЗапроса.КоличествоПолучаемыхЗаписей, "ЧН=0; ЧГ="));
	КонецЕсли;
	
	ГенераторТекстовВыражений.УстановитьИсточники(ОператорЗапроса.Источники.Элементы);
	
	ПоляОператораВМассивСтрок(ИндексОператора, Табуляции);

	Если ЗначениеЗаполнено(ЗапросВыбора.ТаблицаДляПомещения) И ИндексОператора = 0  Тогда
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(Табуляции);
		МассивСтрок.Добавить("ПОМЕСТИТЬ ");
		МассивСтрок.Добавить(ЗапросВыбора.ТаблицаДляПомещения);
	КонецЕсли;		
	
	ИсточникиОператораЗапросВМассивСтрок(ОператорЗапроса.Источники, Табуляции);
	
	Если ЗначениеЗаполнено(ОператорЗапроса.Отбор) Тогда
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(Табуляции);
		МассивСтрок.Добавить("ГДЕ");
		МассивСтрок.Добавить(Символы.ПС);
		ТекущиеТабуляции = Табуляции + Символы.Таб;
		МассивСтрок.Добавить(ТекущиеТабуляции);
		Если ТипЗнч(ОператорЗапроса.Отбор) = Тип("Массив") Тогда
			Условие = ОбработкаМоделиЗапроса.УсловиеИзМассиваВыражений(ОператорЗапроса.Отбор);	
			ГенераторТекстовВыражений.ВыражениеВМассивСтрок(Условие, ТекущиеТабуляции);
		Иначе
			ГенераторТекстовВыражений.ВыражениеВМассивСтрок(ОператорЗапроса.Отбор, ТекущиеТабуляции);	
		КонецЕсли;
	КонецЕсли;
	
	// TODO если используется агрегатнпя функция то нужно дополнить полями не использующими такой функции и не вошедших в шруппировку,
	//при этом если все поля источников использованные в выражении уже добавлены в группировку то само поле добавлять не надо
	Если ОператорЗапроса.Группировка.Элементы.Количество() > 0 
		Или МодельЗапросаУтилиты.НеобходимаГруппировка(ОператорЗапроса) Тогда
		
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(Табуляции);
		МассивСтрок.Добавить("СГРУППИРОВАТЬ ПО");
		ТекущиеТабуляции = Табуляции + Символы.Таб;
		
		ГенераторТекстовВыражений.СписокВыраженийВВМассивСтрокСПереносами(ОператорЗапроса.Группировка.Элементы, ТекущиеТабуляции);	
		ДополнениеПолейГруппировкиВМассивСтрок(ОператорЗапроса, ТекущиеТабуляции);
	КонецЕсли;     
	
	Если ЗначениеЗаполнено(ОператорЗапроса.ОтборСгруппированных) Тогда
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(Табуляции);
		МассивСтрок.Добавить("ИМЕЮЩИЕ");
		МассивСтрок.Добавить(Символы.ПС);
		ТекущиеТабуляции = Табуляции + Символы.Таб;
		Если ТипЗнч(ОператорЗапроса.ОтборСгруппированных) = Тип("Массив") Тогда
			Условие = ОбработкаМоделиЗапроса.УсловиеИзМассиваВыражений(ОператорЗапроса.ОтборСгруппированных);	
			ГенераторТекстовВыражений.ВыражениеВМассивСтрок(Условие, ТекущиеТабуляции);
		Иначе
			ГенераторТекстовВыражений.ВыражениеВМассивСтрок(ОператорЗапроса.ОтборСгруппированных, ТекущиеТабуляции);	
		КонецЕсли;
	КонецЕсли;				
КонецПроцедуры	

// Поля оператора в массив строк.
// 
// Параметры:
//  МассивСтрок - Массив из Строка
//  ЗапросВыбора - см. ЭлементыМоделиЗапроса.НовыйЗапросВыбора
//  ИндексОператора - Число
//  Табуляции - Строка
Процедура ПоляОператораВМассивСтрок(ИндексОператора, Табуляции)
	МассивСтрок.Добавить(Символы.ПС);
	ТекущиеТабуляции = Табуляции + Символы.Таб;	
	
	ПоляОператора = МодельЗапросаУтилиты.ПоляОператораПоПсевдонимам(ЗапросВыбора.Операторы[ИндексОператора]);
	
	ЭтоПервоеПоле = Истина;
	Для Каждого Колонка Из ЗапросВыбора.Колонки Цикл
		Поле = ПоляОператора.Получить(ВРег(Колонка.Имя));	

		Если ЭтоПервоеПоле Тогда
			ЭтоПервоеПоле = Ложь;
		Иначе
			МассивСтрок.Добавить(",");
			МассивСтрок.Добавить(Символы.ПС);
		КонецЕсли;	
		МассивСтрок.Добавить(ТекущиеТабуляции);
		
		Если Поле = Неопределено Тогда
			МассивСтрок.Добавить("NULL");
		ИначеЕсли Поле.Выражение.Значение = "*" Тогда
			МассивСтрок.Добавить("*");	
			Продолжить;
		Иначе
			ГенераторТекстовВыражений.ВыражениеВМассивСтрок( Поле.Выражение, ТекущиеТабуляции);	
		КонецЕсли;	
			
		Если ИндексОператора = 0 Тогда
			МассивСтрок.Добавить(" КАК ");
			МассивСтрок.Добавить(Колонка.Имя);
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

Процедура ИтогиВМассивСтрок(Табуляции)
	Если Не ЗапросВыбора.ОбщиеИтоги
		И ЗапросВыбора.КонтрольныеТочкиИтогов.Количество() = 0 Тогда
		
		Возврат;
	КонецЕсли;	
	
	МассивСтрок.Добавить(Символы.ПС);
	МассивСтрок.Добавить(Табуляции);
		
	Если ЗапросВыбора.ВыраженияИтогов.Количество() > 0 Тогда
		МассивСтрок.Добавить("ИТОГИ");
		МассивСтрок.Добавить(Символы.ПС);
		ТекущиеТабуляции = Табуляции + Символы.Таб;
		СписокПолейСПсевдонимамиВМассивСтрок(ЗапросВыбора.ВыраженияИтогов, ТекущиеТабуляции);
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(Табуляции);
		МассивСтрок.Добавить("ПО");
	Иначе
		МассивСтрок.Добавить("ИТОГИ ПО");	
	КонецЕсли;	
	
	ТекущиеТабуляции = Табуляции + Символы.Таб;
	ЭтоПервыйЭлемент = Истина;
	Если ЗапросВыбора.ОбщиеИтоги Тогда
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(ТекущиеТабуляции);
	    МассивСтрок.Добавить("ОБЩИЕ");
		
		ЭтоПервыйЭлемент = Ложь;
	КонецЕсли;	
 
	Для Каждого КонтрольнаяТочка Из ЗапросВыбора.КонтрольныеТочкиИтогов Цикл
		Если ЭтоПервыйЭлемент Тогда
			ЭтоПервыйЭлемент = Ложь;
		Иначе
			МассивСтрок.Добавить(",");
		КонецЕсли;	
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(ТекущиеТабуляции);
		ГенераторТекстовВыражений.ВыражениеВМассивСтрок(КонтрольнаяТочка.Выражение, ТекущиеТабуляции);
		
		Если КонтрольнаяТочка.ТипКонтрольнойТочки = "ТолькоИерархия" Тогда
			МассивСтрок.Добавить(" ТОЛЬКО ИЕРАРХИЯ");
		ИначеЕсли КонтрольнаяТочка.ТипКонтрольнойТочки = "Иерархия" Тогда
			МассивСтрок.Добавить(" ИЕРАРХИЯ");	
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(КонтрольнаяТочка.ТипДополненияПериодами) Тогда
			МассивСтрок.Добавить(" ПЕРИОДАМИ(");
			МассивСтрок.Добавить(КонтрольнаяТочка.ТипДополненияПериодами);
			МассивСтрок.Добавить(", ");
			Если КонтрольнаяТочка.НачалоПериодаДополнения <> Неопределено Тогда
				ГенераторТекстовВыражений.ВыражениеВМассивСтрок(КонтрольнаяТочка.НачалоПериодаДополнения, ТекущиеТабуляции);
			КонецЕсли;	
			МассивСтрок.Добавить(", ");
			Если КонтрольнаяТочка.КонецПериодаДополнения <> Неопределено Тогда
				ГенераторТекстовВыражений.ВыражениеВМассивСтрок(КонтрольнаяТочка.КонецПериодаДополнения, ТекущиеТабуляции);
			КонецЕсли;	
			МассивСтрок[МассивСтрок.ВГраница()] = МассивСтрок[МассивСтрок.ВГраница()] + ")";
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(КонтрольнаяТочка.ИмяКолонки) Тогда
			МассивСтрок.Добавить(" КАК ");	
			МассивСтрок.Добавить(КонтрольнаяТочка.ИмяКолонки)
		КонецЕсли;	
	КонецЦикла;		
КонецПроцедуры	

Процедура ДополнениеПолейГруппировкиВМассивСтрок(ОператорЗапроса, Табуляции)
	ДопПоляГруппировки = МодельЗапросаУтилиты.ДополнительныеПоляГруппировки(ОператорЗапроса);
	Если Не ЗначениеЗаполнено(ДопПоляГруппировки) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОператорЗапроса.Группировка.Элементы) Тогда
		МассивСтрок.Добавить(",");
	КонецЕсли;	
	ГенераторТекстовВыражений.СписокВыраженийВВМассивСтрокСПереносами(ДопПоляГруппировки, Табуляции);	
КонецПроцедуры	

Процедура ИсточникиОператораЗапросВМассивСтрок(Источники, Знач Табуляции)
	Если Источники.Элементы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
		
	МассивСтрок.Добавить(Символы.ПС);
	МассивСтрок.Добавить(Табуляции);
	МассивСтрок.Добавить("ИЗ");
	МассивСтрок.Добавить(Символы.ПС);
	Табуляции = Табуляции + Символы.Таб;
	МассивСтрок.Добавить(Табуляции);
	
	ИсточникиПоИдентификаторам = МодельЗапросаУтилиты.МассивСтруктурВСоответствие(Источники.Элементы, "ИдентификаторИсточника");
	
	ОбработанныеИсточники = Новый Соответствие();
	Для Каждого ТекущийИсточник Из МодельЗапросаУтилиты.СортироватьИсточникиПоИерархии(Источники.Элементы) Цикл
		Если ОбработанныеИсточники.Получить(ТекущийИсточник.Источник.Псевдоним) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		ИсточникДанныхЗапросаВМассивСтрок(ТекущийИсточник, ИсточникиПоИдентификаторам,ОбработанныеИсточники, Табуляции);	
		Если ОбработанныеИсточники.Количество() <> Источники.Элементы.Количество() Тогда
			МассивСтрок.Добавить(",");
			МассивСтрок.Добавить(Символы.ПС);
			МассивСтрок.Добавить(Табуляции);
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры	

Процедура ИсточникДанныхЗапросаВМассивСтрок(Источник, ИсточникиПоИдентификаторам, ОбработанныеИсточники, Знач Табуляции)
	
	Если ОбработанныеИсточники.Получить(Источник.Источник.Псевдоним) = Неопределено Тогда
		ОбработанныеИсточники.Вставить(Источник.Источник.Псевдоним, Истина);
	Иначе
		Возврат;
	КонецЕсли;
	
//	МассивСтрок.Добавить(Символы.ПС);
//	МассивСтрок.Добавить(ТекущиеТабуляции);
	
	Если Источник.Источник.Тип = "ИсточникДанныхВложенныйЗапрос" Тогда
		МассивСтрок.Добавить("(");
		ГенераторТекста = ГенерацияТекстовЗапросов.СоздатьГенераторТекстаЗапроса(Источник.Источник.ЗапросВыбора, МассивСтрок);
		ГенераторТекста.ЗапросВыбораВМассивСтрок();
		МассивСтрок.Добавить(")");
	ИначеЕсли Источник.Источник.Тип = "ИсточникДанныхТаблицаЗначений" Тогда
		МассивСтрок.Добавить("&");
		МассивСтрок.Добавить(Источник.Источник.ИмяТаблицы);	
	ИначеЕсли Источник.Источник.Тип = "ИсточникДанныхТаблица" Тогда 
		МассивСтрок.Добавить(Источник.Источник.ИмяТаблицы);
		Если Источник.Источник.Параметры <> Неопределено Тогда
			МассивСтрок.Добавить("(");
			ГенераторТекстовВыражений.СписокВыраженийВВМассивСтрок(Источник.Источник.Параметры, Табуляции); 
			МассивСтрок.Добавить(")");
		КонецЕсли;		
	ИначеЕсли Источник.Источник.Тип = "ИсполняемоеПредставление" Тогда 
		МассивСтрок.Добавить(Источник.Источник.ИмяТаблицы);
		Если ЗначениеЗаполнено(Источник.Источник.Параметры) 
			Или Источник.Источник.ВТФильтр <> Неопределено Тогда
			МассивСтрок.Добавить("(");
			ПараметрыИсполняемогоПредставленияВМассивСтрок(
				Источник.Источник.Параметры, 
				Источник.Источник.ВТФильтр,
				Табуляции); 
			МассивСтрок.Добавить(")");
		КонецЕсли;	
	ИначеЕсли Источник.Источник.Тип = "ИсточникДанныхВременнаяТаблица" Тогда 
		ОписаниеВТ = Источник.Источник.ОписаниеВТ;
		Если ОписаниеВТ = Неопределено Тогда
			ИмяТаблицы = Источник.Источник.ИмяТаблицы;
		Иначе
			ИмяТаблицы = ОписаниеВТ.Имя;
		КонецЕсли;		
		МассивСтрок.Добавить(ИмяТаблицы);
	Иначе	
		МассивСтрок.Добавить(Источник.Источник.ИмяТаблицы);
	КонецЕсли;	
	
	Если Источник.Источник.Псевдоним <> Неопределено Тогда
		МассивСтрок.Добавить(" КАК ");
		МассивСтрок.Добавить(Источник.Источник.Псевдоним);
	КонецЕсли;	
	
	СоединенияИсточникаВМассивСтрок(
		Источник.Соединения, 
		ИсточникиПоИдентификаторам,
		ОбработанныеИсточники,  
		Табуляции);
КонецПроцедуры	

// Параметры исполняемого представления в массив строк.
// 
// Параметры:
//  МассивСтрок - Массив из Строка
//  Параметры - Массив из см. ЭлементыМоделиЗапроса.НовыйПарараметрИсполянегоПредставленияВТФильтр, см. НовыйПарараметрИсполянегоПредставленияОтбор, см. НовыйПарараметрИсполянегоПредставленияОтбор -
//  Источники - Соответствие из УникальныйИдентификатор, Строка
//  Табуляции - Строка
Процедура ПараметрыИсполняемогоПредставленияВМассивСтрок(Параметры, ВТФильтр, Знач Табуляции)
	ТекущиеТабуляции = Табуляции + Символы.Таб;
	
	Если ВТФильтр <> Неопределено Тогда
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(ТекущиеТабуляции);
		Операнд = ЭлементыМоделиЗапроса.НовыйРазыменование();
		Операнд.Элементы.Добавить(ЭлементыМоделиЗапроса.НовыйСписокВыражений());
		Для Каждого Поле Из ВТФильтр.Поля Цикл
			Разыменование = ЭлементыМоделиЗапроса.НовыйРазыменование();
			Разыменование.Элементы.Добавить(Поле);
			Операнд.Элементы[0].Элементы.Добавить(Разыменование); 
		КонецЦикла;
		ГенераторТекстовВыражений.ВыражениеВМассивСтрок(Операнд, ТекущиеТабуляции);
		МассивСтрок.Добавить(" В ");
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(ТекущиеТабуляции);
		МассивСтрок.Добавить("(");
		
		ГенераторТекстаЗапроса = ГенерацияТекстовЗапросов.СоздатьГенераторТекстаЗапроса(ВТФильтр.ЗапросВыбора, МассивСтрок);
		ГенераторТекстаЗапроса.ЗапросВыбораВМассивСтрок(ТекущиеТабуляции);
		МассивСтрок.Добавить(")");
		Если Параметры.Количество() > 0 Тогда
			МассивСтрок.Добавить(",");
		КонецЕсли;
	КонецЕсли;
	
	МассивСтрок.Добавить(Символы.ПС);
	НомерПараметра = 1;
	Для Каждого Параметр Из Параметры Цикл
		Выражение = ЭлементыМоделиЗапроса.НовыйБинарнаяОперация();
		Выражение.ЛеваяЧасть = ЭлементыМоделиЗапроса.НовыйРазыменование();
		Выражение.ЛеваяЧасть.Элементы.Добавить(Параметр.Имя);
		Выражение.Операция = "=";
		Если Параметр.ЭтоПараметрЗапроса Тогда
			Выражение.ПраваяЧасть = ЭлементыМоделиЗапроса.НовыйПараметрЗапроса();
			Выражение.ПраваяЧасть.Имя = Параметр.Значение;
		Иначе
			Выражение.ПраваяЧасть = ЭлементыМоделиЗапроса.НовыйКонстанта();
			Выражение.ПраваяЧасть.Значение = Параметр.Значение;
		КонецЕсли;	
		МассивСтрок.Добавить(ТекущиеТабуляции);
		ГенераторТекстовВыражений.ВыражениеВМассивСтрок(Выражение, ТекущиеТабуляции);
		Если НомерПараметра <> Параметры.Количество() Тогда
			МассивСтрок.Добавить(",");
			МассивСтрок.Добавить(Символы.ПС);
		КонецЕсли;
		НомерПараметра = НомерПараметра + 1;
	КонецЦикла;
КонецПроцедуры	

Процедура СоединенияИсточникаВМассивСтрок(Соединения, ИсточникиПоИдентификаторам, ОбработанныеИсточники, Табуляции)
	Если Соединения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	ТекущиеТабуляции = Табуляции + Символы.Таб;
	
	Для Каждого ТекущееСоединение Из Соединения Цикл
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(ТекущиеТабуляции);
		Если ТекущееСоединение.Опционально Тогда
			МассивСтрок.Добавить("{");
		КонецЕсли;	
		
		МассивСтрок.Добавить(ВРег(ТекущееСоединение.ТипСоединения));
		МассивСтрок.Добавить(" СОЕДИНЕНИЕ ");       
		
		Источник = ИсточникиПоИдентификаторам[ТекущееСоединение.Источник];
		ИсточникДанныхЗапросаВМассивСтрок(
			Источник, 
			ИсточникиПоИдентификаторам, 
			ОбработанныеИсточники, 
			ТекущиеТабуляции);
		
		МассивСтрок.Добавить(Символы.ПС);
		МассивСтрок.Добавить(ТекущиеТабуляции);
		МассивСтрок.Добавить("ПО ");
		ГенераторТекстовВыражений.ВыражениеВМассивСтрок(ТекущееСоединение.Условие, ТекущиеТабуляции);
		
		Если ТекущееСоединение.Опционально Тогда
			МассивСтрок.Добавить("}");
		КонецЕсли;	
	КонецЦикла;	
			
КонецПроцедуры	

Процедура СписокПолейСПсевдонимамиВМассивСтрок(ВыбираемыеПоля, Табуляции) Экспорт
	МассивСтрок.Добавить(Символы.ПС);
	
	ТекущиеТабуляции = Табуляции + Символы.Таб;
	
	ЭтоПервоеПоле = Истина;
	Для Каждого Поле Из ВыбираемыеПоля Цикл
		Если ЭтоПервоеПоле Тогда
			ЭтоПервоеПоле = Ложь;
		Иначе
			МассивСтрок.Добавить(",");
			МассивСтрок.Добавить(Символы.ПС);
		КонецЕсли;	
		МассивСтрок.Добавить(ТекущиеТабуляции);
		Если Поле.Выражение = "*" Тогда
			МассивСтрок.Добавить("*");	
			Продолжить;
		КонецЕсли;	
		
		ГенераторТекстовВыражений.ВыражениеВМассивСтрок( Поле.Выражение, ТекущиеТабуляции);
		
		Если Поле.Псевдоним = Неопределено Тогда
			Псевдоним = Неопределено;
		Иначе 
			Псевдоним = Поле.Псевдоним; 	
		КонецЕсли;	
		
		Если Псевдоним <> Неопределено Тогда
			МассивСтрок.Добавить(" КАК ");
			МассивСтрок.Добавить(Псевдоним);
		КонецЕсли;	
			
	КонецЦикла;	
КонецПроцедуры	

Процедура СписокВыраженийУпорядовачиванияВМассивСтрок(ВыраженияУпорядовачивания, Знач Табуляции) Экспорт
	ЭтоПервоеВыражение = Истина;
	Для Каждого ЭлементУпорядовачивания Из ВыраженияУпорядовачивания Цикл
		Если ЭтоПервоеВыражение Тогда
			ЭтоПервоеВыражение = Ложь;
			МассивСтрок.Добавить(Табуляции);
		Иначе
			МассивСтрок.Добавить(",");
			МассивСтрок.Добавить(Символы.ПС);
			МассивСтрок.Добавить(Табуляции);	
		КонецЕсли;
		
		ГенераторТекстовВыражений.ВыражениеВМассивСтрок(ЭлементУпорядовачивания.Выражение, Табуляции);

		Если ЭлементУпорядовачивания.Иерахия Тогда
			МассивСтрок.Добавить(" ИЕРАРХИЯ");
		КонецЕсли;
		
		Если ЭлементУпорядовачивания.Направеление = "Убыв" Тогда
			МассивСтрок.Добавить(" УБЫВ");
		КонецЕсли;	
	КонецЦикла;		
КонецПроцедуры	

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
