#Область СлужебныеПроцедурыИФункции

// Создать генератор текста запроса.
// 
// Параметры:
//  ЗапросВыбора - см. ЭлементыМоделиЗапроса.НовыйЗапросВыбора
//  МассивСтрок - Массив из Строка
//  ИсточникиВнешнегоЗапроса - Соответствие из КлючИЗначение:
//		* Ключ - Строка
//		* Значение - см. ЭлементыМоделиЗапроса.НовыйИсточник
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ГенераторТекстовЗапрсов 
Функция СоздатьГенераторТекстаЗапроса(ЗапросВыбора, МассивСтрок, ИсточникиВнешнегоЗапроса = Неопределено) Экспорт
	ГенераторТекстаЗапросов = Обработки.ГенераторТекстовЗапрсов.Создать();
	ГенераторТекстаЗапросов.УстановитьЗапрос(ЗапросВыбора);
	ГенераторТекстаЗапросов.УстановитьМассивСтрок(МассивСтрок);
	
	ГенераторТекстовВыражений = СоздатьГенераторТекстовВыражений(МассивСтрок, ИсточникиВнешнегоЗапроса);
	
	ГенераторТекстаЗапросов.УстановитьГенераторТекстовВыражений(ГенераторТекстовВыражений);
	
	Возврат ГенераторТекстаЗапросов;
КонецФункции

// Создать генератор текстов выражений запроса.
// 
// Параметры:
//  МассивСтрок - Массив из Строка
//  ИсточникиВнешнегоЗапроса - Соответствие из КлючИЗначение:
//		* Ключ - Строка
//		* Значение - см. ЭлементыМоделиЗапроса.НовыйИсточник
// 
// Возвращаемое значение:
//  ОбработкаОбъект.ГенераторТекстовВыражений 
Функция СоздатьГенераторТекстовВыражений(МассивСтрок = Неопределено, ИсточникиВнешнегоЗапроса = Неопределено) Экспорт
	ГенераторТекстовВыражений = Обработки.ГенераторТекстовВыражений.Создать();
	Если МассивСтрок <> Неопределено Тогда
		ГенераторТекстовВыражений.УстановитьМассивСтрок(МассивСтрок);
	КонецЕсли;
	
	Если ИсточникиВнешнегоЗапроса <> Неопределено Тогда
		ГенераторТекстовВыражений.УстановитьИсточникиВнешнегоЗапроса(ИсточникиВнешнегоЗапроса);
	КонецЕсли;	
	
	Возврат ГенераторТекстовВыражений;
КонецФункции

Функция ТекстПакетЗапрсов(ПакетЗапросов) Экспорт 
	МассивСтрок = Новый Массив;
	ПакетЗапросовВМассивСтрок(МассивСтрок, ПакетЗапросов);
	Возврат СтрСоединить(МассивСтрок);
	
КонецФункции	

Функция ТекстЗапросаВыбора(ЗапросВыбора) Экспорт 
	МассивСтрок = Новый Массив;
	Генератор = СоздатьГенераторТекстаЗапроса(ЗапросВыбора, МассивСтрок);
	Генератор.ЗапросВыбораВМассивСтрок();
	Возврат СтрСоединить(МассивСтрок);
КонецФункции

Функция ВыражениеВСтроку(Выражение, ГенераторТекстовВыражений) Экспорт 
	МассивСтрок = Новый Массив();
	ГенераторТекстовВыражений.УстановитьМассивСтрок(МассивСтрок);
	ГенераторТекстовВыражений.ВыражениеВМассивСтрок(Выражение, "");
	Возврат СтрСоединить(МассивСтрок);
КонецФункции

Процедура ПакетЗапросовВМассивСтрок(МассивСтрок, ПакетЗапросов)
	ЭтоПервыйЗапрос = Истина;
	
	Для Каждого Запрос Из ПакетЗапросов.Элементы Цикл
		Если ЭтоПервыйЗапрос Тогда
			ЭтоПервыйЗапрос = Ложь;
		Иначе
			МассивСтрок.Добавить(Символы.ПС);
			МассивСтрок.Добавить(";");
			МассивСтрок.Добавить(Символы.ПС);
			МассивСтрок.Добавить("////////////////////////////////////////////////////////////////////////////////");
			МассивСтрок.Добавить(Символы.ПС);
		КонецЕсли;
		
		Если Запрос.Тип = "ЗапросВыбора" Тогда
			Генератор = СоздатьГенераторТекстаЗапроса(Запрос, МассивСтрок);
			Генератор.ЗапросВыбораВМассивСтрок("");
		ИначеЕсли Запрос.Тип = "ЗапросУничтожения" Тогда
			ЗапросУничтоженияВМассивСтрок(МассивСтрок, Запрос, "");
		КонецЕсли;
	КонецЦикла;		
КонецПроцедуры	

Процедура ЗапросУничтоженияВМассивСтрок(МассивСтрок, ЗапросУничтожения, Табуляции = "")
	МассивСтрок.Добавить("УНИЧТОЖИТЬ ");
	Если ЗапросУничтожения.ОписаниеВТ = Неопределено Тогда
		МассивСтрок.Добавить(ЗапросУничтожения.ИмяТаблицы);
	Иначе
		МассивСтрок.Добавить(ЗапросУничтожения.ОписаниеВТ.Имя);
	КонецЕсли;
КонецПроцедуры	

Функция ТекстЗапросаУничтожения(ЗапросУничтожения) Экспорт 
	МассивСтрок = Новый Массив;
	ЗапросУничтоженияВМассивСтрок(МассивСтрок, ЗапросУничтожения);
	Возврат СтрСоединить(МассивСтрок);	
КонецФункции	



#КонецОбласти

