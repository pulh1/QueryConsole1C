
#Область СлужебныеПроцедурыИФункции

Процедура ОбработатьИсточникЗапроса(Источник, Контекст) Экспорт 
	Если Источник.Источник.Тип <> "ИсточникДанныхТаблица" 
		Или Не СтрНачинаетсяС(ВРег(Источник.Источник.ИмяТаблицы), ВРег("ИсполняемоеПредставление.")) Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеПредставления = ПоставщикИсполняемыхПредставлений.ОписаниеПредставленияПоИмени(Источник.Источник.ИмяТаблицы);
	Если ОписаниеПредставления = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИсполняемоеПредставление = ИсполняемоеПредставлениеПоОписанию(ОписаниеПредставления);  
	ИсполняемоеПредставление.Псевдоним = Источник.Источник.Псевдоним;
	
	Если Источник.Источник.Параметры = Неопределено Тогда
		Параметры = Новый Массив();
	Иначе
		Параметры = Источник.Источник.Параметры;
	КонецЕсли;		
	
	УстанавливаемыеПараметры = Новый Массив();
	Для Каждого Параметр Из Параметры Цикл
		Если Параметр = Неопределено Тогда
			ВызватьИсключение "Не задан параметр представления";
		ИначеЕсли ЭтоПараметрВТФильтр(Параметр.Значение) Тогда
			ВТФильтр = ОбработатьВТФильтр(ИсполняемоеПредставление, ОписаниеПредставления, Параметр.Значение, Источник.Источник, Контекст);
			УстанавливаемыеПараметры.Добавить(ВТФильтр);
		Иначе
			Параметр = ОбработатьПараметрПредставления(ИсполняемоеПредставление, Параметр.Значение, Источник, Контекст);	
			УстанавливаемыеПараметры.Добавить(Параметр);
		КонецЕсли;	
	КонецЦикла;	
	 
 	УстановитьПараметрыИсполняемогоПредставления(ИсполняемоеПредставление, ОписаниеПредставления, УстанавливаемыеПараметры);
	 
	Источник.Источник = ИсполняемоеПредставление;
КонецПроцедуры	

Процедура УстановитьПараметрыИсполняемогоПредставления(ИсполняемоеПредставление, ОписаниеПредставления, Параметры) Экспорт
	ОписаниеПараметровПоИменам = Новый Соответствие();
	Для Каждого ОписаниеПараметра Из ОписаниеПредставления.ОписаниеПараметров Цикл
		ОписаниеПараметровПоИменам.Вставить(ВРег(ОписаниеПараметра.Имя), ОписаниеПараметра);
	КонецЦикла;	
	
	ВТФильтр = Неопределено;
	УстанавливаемыеПараметры = Новый Массив();
	УстановленныеПараметрыПоИменам = Новый Соответствие();
	Для Каждого ТекущийПараметр Из Параметры Цикл
		Если ТекущийПараметр.Тип = "ПараметрИсполняемогоПредставленияКонстанта" Тогда
			Если УстановленныеПараметрыПоИменам.Получить(ВРег(ТекущийПараметр.Имя)) <> Неопределено Тогда
				ВызватьИсключение "Для исполняемого представления " + ОписаниеПредставления.Имя + "
				|параметр " + ОписаниеПараметра.Имя + " был установлен ранее."; 	
			КонецЕсли;	
			
			УстановитьПараметрКонстанта(
				УстанавливаемыеПараметры, 
				ТекущийПараметр, 
				ОписаниеПараметровПоИменам, 
				ИсполняемоеПредставление.ИмяТаблицы);	
			
			УстановленныеПараметрыПоИменам.Вставить(ВРег(ТекущийПараметр.Имя), Истина);
		ИначеЕсли ТекущийПараметр.Тип = "ПараметрИсполняемогоПредставленияВТФильтр" Тогда
			Если ВТФильтр <> Неопределено Тогда
				ВызватьИсключение "Для исполняемого представления " + ОписаниеПредставления.Имя + "
				|временная таблица фильтр не может быть задана дважды.";		
			КонецЕсли;
			ПроверитьПараметрВТФильтр(ТекущийПараметр, ОписаниеПредставления);
			ВТФильтр = ТекущийПараметр;
		КонецЕсли;
	КонецЦикла;
	
	Если ОписаниеПредставления.ОписаниеВТФильтр <> Неопределено 
		И ОписаниеПредставления.ОписаниеВТФильтр.Обязательный
		И ВТФильтр = Неопределено Тогда
		
		ВызватьИсключение "Для исполняемого представления " + ОписаниеПредставления.Имя + "
				|не задана временная таблица фильтр.";
	КонецЕсли;
	
	Для Каждого ОписаниеПараметра Из ОписаниеПредставления.ОписаниеПараметров Цикл
		Если ОписаниеПараметра.Обязательный
			И УстановленныеПараметрыПоИменам.Получить(ВРег(ОписаниеПараметра.Имя)) = Неопределено Тогда
			
			ВызватьИсключение "Для исполняемого представления " + ОписаниеПредставления.Имя + "
			|не задано значение обязательного параметра " + ОписаниеПараметра.Имя + "."; 
		КонецЕсли;
	КонецЦикла;
	
	ИсполняемоеПредставление.ВТФильтр = ВТФильтр;
	ИсполняемоеПредставление.Параметры = УстанавливаемыеПараметры;
КонецПроцедуры

Функция ОбработатьВТФильтр(ИсполняемоеПредставление, ОписаниеПредтсавления, Параметр, Источник, Контекст)
	ПроверитьОперандДляПараметраВТФильтр(ИсполняемоеПредставление, Источник.Псевдоним, Параметр);
	ПроверитьЭлементСписокПараметраВТФильтр(ИсполняемоеПредставление, Источник.Псевдоним, Параметр);

	ПоляФильтра = РазобратьСписокПараметров(Параметр.Операнд); 
	ЗапросФильтра = Параметр.Список;  
	
	ВложенныйКонтекст = ОбработкаМоделиЗапроса.КонтекстОбработкиВложенногоЗапроса(Контекст);
	ОбработкаМоделиЗапроса.ОбработатьЗапрос(ЗапросФильтра, ВложенныйКонтекст); 
	
	ВТФильтр = ЭлементыМоделиЗапроса.НовыйПараметрИсполняемогоПредставленияВТФильтр();
	
	ВТФильтр.Поля = ПоляФильтра; 
	ВТФильтр.ЗапросВыбора = ЗапросФильтра;
	
	Возврат ВТФильтр; 
КонецФункции

Функция ОбработатьПараметрПредставления(ИсполняемоеПредставление, Параметр, Источник, Контекст)
	ПроверитьВыраженийПараметрКонстанта(
		ИсполняемоеПредставление, 
		Параметр);	
		
	Возврат ПараметрКонстантаИзВыражения(Параметр);	
КонецФункции	

Процедура ПроверитьПараметрВТФильтр(ПараметрВТФильтр, ОписаниеПредставления)
	Если ОписаниеПредставления.ОписаниеВТФильтр = Неопределено Тогда
		ВызватьИсключение "Исполняемое представление " + ОписаниеПредставления.Имя + " не поддерживает временной таблицы фильтра";
	КонецЕсли;
	
	Если ПараметрВТФильтр.Поля.Количество() <> ПараметрВТФильтр.ЗапросВыбора.Колонки.Количество() Тогда
		ВызватьИсключение "Разное количество полей в фильтре и запросе ВТФильтр для представления " + ОписаниеПредставления.Имя;	
	КонецЕсли;	
	
	ОтработанныеПоляФильтра = Новый Соответствие;     
	ПоляФильтраПоИменам = ПоляФильтраПоИменам(ОписаниеПредставления.ОписаниеВТФильтр);
	Для Каждого Поле Из ПараметрВТФильтр.Поля Цикл
		ОписаниеПоляФильтра = ПоляФильтраПоИменам.Получить(ВРег(Поле));
		Если ОписаниеПоляФильтра = Неопределено Тогда
			ВызватьИсключение "Не известное поле фильтра " + Поле + " для представления " + ОписаниеПредставления.Имя;
		КонецЕсли;	
		ОтработанныеПоляФильтра.Вставить(ОписаниеПоляФильтра.Имя, Истина);	
	КонецЦикла;	
	
	Для Каждого КлючЗначение Из ПоляФильтраПоИменам Цикл
		Если КлючЗначение.Значение.Обязательный 
			И ОтработанныеПоляФильтра.Получить(КлючЗначение.Значение.Имя) = Неопределено Тогда
			
			ВызватьИсключение "Не задано поле ВТ фильтра " + КлючЗначение.Значение.Имя + " для представления " 
				+ ОписаниеПредставления.Имя;   
		КонецЕсли;			
	КонецЦикла;	
КонецПроцедуры
                                                                                                                              
Процедура ПроверитьОперандДляПараметраВТФильтр(ИсполняемоеПредставление, Псевдоним, ПараметрВТФильтр)
	ТекстИсключения = "Не корректное описание ВТФильтр для представления " + ИсполняемоеПредставление.ИмяТаблицы + " КАК " + Псевдоним;
	
	Если ПараметрВТФильтр.Операнд.Тип <> "Разыменование" Тогда
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;	
	
	Если ПараметрВТФильтр.Операнд.Элементы.Количество() <> 1 Тогда
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	ЭлементРазыменования = ПараметрВТФильтр.Операнд.Элементы[0];
	
	Если ТипЗнч(ЭлементРазыменования) = Тип("Строка") Тогда
		Возврат; 
	КонецЕсли;
	
	Если ЭлементРазыменования.Тип <> "СписокВыражений" Тогда
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;	
	
	Для Каждого ЭлементСписка Из ЭлементРазыменования.Элементы Цикл
		Если ЭлементСписка.Тип <> "Разыменование" 
			Или ЭлементСписка.Элементы.Количество() <> 1
			И ТипЗнч(ЭлементСписка.Элементы[0]) <> Тип("Строка")	Тогда 
			
			ВызватьИсключение ТекстИсключения;
		КонецЕсли;
	КонецЦикла;			
КонецПроцедуры	

Процедура ПроверитьЭлементСписокПараметраВТФильтр(ИсполняемоеПредставление, Псевдоним, ПараметрВТФильтр)
	ТекстИсключения = "Не корректное описание ВТФильтр для представления " + ИсполняемоеПредставление.ИмяТаблицы + " КАК " + Псевдоним;
	
	Если ПараметрВТФильтр.Список.Тип <> "ЗапросВыбора" Тогда
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;		
КонецПроцедуры	

Функция РазобратьСписокПараметров(Операнд)
	Результат = Новый Массив;
	Если Операнд.Тип <> "Разыменование" Тогда
		Возврат Неопределено;
	КонецЕсли;	
	
	Если Операнд.Элементы.Количество() <> 1 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ЭлементРазыменования = Операнд.Элементы[0];
	
	Если ТипЗнч(ЭлементРазыменования) = Тип("Строка") Тогда
		Результат.Добавить(ЭлементРазыменования);
		Возврат Результат; 
	КонецЕсли;
	
	Если ЭлементРазыменования.Тип <> "СписокВыражений" Тогда
		Возврат Неопределено;
	КонецЕсли;	
	
	Для Каждого ЭлементСписка Из ЭлементРазыменования.Элементы Цикл
		Если ЭлементСписка.Тип = "Разыменование" 
			И ЭлементСписка.Элементы.Количество() = 1
			И ТипЗнч(ЭлементСписка.Элементы[0]) = Тип("Строка")	Тогда 
			
			Результат.Добавить(ЭлементСписка.Элементы[0]);  
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЦикла;		
	
	Возврат Результат;
КонецФункции	

Процедура ПроверитьВыраженийПараметрКонстанта(ИсполняемоеПредставление, ПараметрКонстанта)		
	Если ПараметрКонстанта.Тип = "БинарнаяОперация"	Тогда
		Если ПараметрКонстанта.Операция <> "=" Тогда
			ВызватьИсключение "Не корректное выражения для параметра представления " 
				+ ИсполняемоеПредставление.ИмяТаблицы + ". 
				| Операция " + ПараметрКонстанта.Операция + " не поддерживается";	
		КонецЕсли;
		Если ПараметрКонстанта.ЛеваяЧасть.Тип <> "Разыменование" 
			Или ПараметрКонстанта.ЛеваяЧасть.Элементы.Количество() <> 1 
			Тогда
			
			ВызватьИсключение "Не корректное выражения для параметра представления " 
				+ ИсполняемоеПредставление.ИмяТаблицы + ". 
				| Не верно указано имя параметра";	
		КонецЕсли;
		
		ПроверитьВыражениеЗначенияКонстанта(ИсполняемоеПредставление, ПараметрКонстанта.ПраваяЧасть); 
	Иначе
		ВызватьИсключение "Не корректное выражения для параметра представления " 
			+ ИсполняемоеПредставление.ИмяТаблицы + ".";	
	КонецЕсли;	
КонецПроцедуры 

Процедура УстановитьПараметрКонстанта(ПараметрыПредставление, Параметр, ОписаниеПараметровПоИменам, ИмяПредставления) Экспорт 		
	
	ОписаниеПараметра = ОписаниеПараметровПоИменам.Получить(ВРег(Параметр.Имя));
	Если ОписаниеПараметра = Неопределено Тогда
		ВызватьИсключение "Не известное имя параметра " + Параметр.Имя + " для представления " 
				+ ИмяПредставления + ". 
				|Указание параметра запроса не поддерживается";			
	КонецЕсли; 
	
	Если Параметр.ЭтоПараметрЗапроса Тогда
		Если Не ОписаниеПараметра.ДопустимПараметрЗапроса Тогда
			ВызватьИсключение "Не корректное выражения для параметра " + ОписаниеПараметра.Имя + " представления " 
				+ ИмяПредставления + ". 
				|Указание параметра запроса не поддерживается";	
		КонецЕсли;	 
	Иначе
		Если Не ОписаниеПараметра.ТипКонстанты.СодержитТип(ТипЗнч(Параметр.Значение)) Тогда
			ВызватьИсключение "Не корректное выражения для параметра " + ОписаниеПараметра.Имя + " представления " 
					+ ИмяПредставления + ". 
					|Не верный тип значения";	
		КонецЕсли;				
	КонецЕсли;		
	
	Если ОписаниеПараметра.Обязательный 
		И Не ЗначениеЗаполнено(Параметр.Значение) Тогда
		
		ВызватьИсключение "Не корректное выражения для параметра " + ОписаниеПараметра.Имя + " представления " 
					+ ИмяПредставления + ". 
					|Значение параметра не заполнено";
	КонецЕсли;				
	
	ПараметрыПредставление.Добавить(Параметр);
КонецПроцедуры 

Функция ПараметрКонстантаИзВыражения(ВыражениеПараметраКонстанты)		
	Параметр = ЭлементыМоделиЗапроса.НовыйПараметрИсполняемогоПредставленияКонстанта();
	
	Если ВыражениеПараметраКонстанты.Тип = "БинарнаяОперация"	Тогда
		Параметр.Имя = ВыражениеПараметраКонстанты.ЛеваяЧасть.Элементы[0];
		Если ВыражениеПараметраКонстанты.ПраваяЧасть.Тип = "ПараметрЗапроса" Тогда
			Параметр.Значение = ВыражениеПараметраКонстанты.ПраваяЧасть.Имя; 
			Параметр.ЭтоПараметрЗапроса = Истина;
		Иначе
			Параметр.Значение = ВыражениеПараметраКонстанты.ПраваяЧасть.Значение;	
		КонецЕсли;	
	КонецЕсли;	 
	
	Возврат Параметр;
КонецФункции  

Процедура ПроверитьВыражениеЗначенияКонстанта(ИсполняемоеПредставление, ПараметрКонстанта)
	Если ПараметрКонстанта.Тип <> "ПараметрЗапроса" 
		И ПараметрКонстанта.Тип <> "Константа" Тогда
		
		ВызватьИсключение "Не корректное выражения для параметра представления " 
			+ ИсполняемоеПредставление.ИмяТаблицы + ".";	
	КонецЕсли;		
КонецПроцедуры
	
Функция ИсполняемоеПредставлениеПоОписанию(ОписаниеПредставления) Экспорт 
	ИсполняемоеПредставление = ЭлементыМоделиЗапроса.НовыйИсполняемоеПредставление();
	ИсполняемоеПредставление.ИмяТаблицы = ОписаниеПредставления.Имя; 
	ИсполняемоеПредставление.ИмяОбработчика = ОписаниеПредставления.ИмяОбработчика;
	
	Возврат ИсполняемоеПредставление;
КонецФункции
   
Функция ПараметрКонстантаПоОписанию(ОписаниеПараметра) Экспорт
	Параметр = ЭлементыМоделиЗапроса.НовыйПараметрИсполняемогоПредставленияКонстанта();  
	Параметр.Имя = ОписаниеПараметра.Имя;
	
	Возврат Параметр;
КонецФункции

Функция ПоляФильтраПоИменам(ОписаниеВТФильтр)   
	Если ОписаниеВТФильтр._ПоляФильтраПоИменам.Количество() = 0 Тогда  
		Для Каждого Поле Из ОписаниеВТФильтр.ПоляФильтра Цикл
			ОписаниеВТФильтр._ПоляФильтраПоИменам.Вставить(ВРег(Поле.Имя), Поле);	
		КонецЦикла;	 
	КонецЕсли;
	
	Возврат ОписаниеВТФильтр._ПоляФильтраПоИменам;	
КонецФункции	

Функция ЭтоПараметрВТФильтр(Параметр)
	Возврат Параметр.Тип = "ОператорВ"
				И Не Параметр.Иерархия
				И Не Параметр.Инверсия
				И Параметр.Список.Тип = "ЗапросВыбора";	
КонецФункции
	
#КонецОбласти
