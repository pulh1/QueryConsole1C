
#Область СлужебныеПроцедурыИФункции

// Новый описание представления.
// 
// Возвращаемое значение:
//  Структура - Новый описание представления:
// * Поля - Массив из см. НовыйПолеПредставления - 
// * ОписаниеВТФильтр - см. НовыйОписаниеВТФильтр
// * ОписаниеПараметров - Массив из см. НовыйОписаниеПараметраКонстанта - 
// * ОписаниеОтбора - см. НовыйОписаниеОтбора
// * ПоддерживаетсяПсевдонимыПолей - Булево
// * ПоддерживаютсяИндексы - Булево - 
// * ПоддерживаетсяПолучениеРезультатаЗапроса - Булево - 
// * ИмяФормируемойВТПоУмолчанию - Строка -
// * ИмяВТДляСКД - Строка
// * ПоддерживаетсяУказаниеИмяВТРезультат - Булево - 
// * ПоляПоИменам - Соответствие из КлючИЗначение:
// 		** Ключ - Строка -
// 		** Значение - см. НовыйПолеПредставления
// * ПараметрыПоИменам - Соответствие из КлючИЗначение:
// 		** Ключ - Строка -
// 		** Значение - см. НовыйОписаниеПараметраКонстанта
// * ДоступноВМеханизмеПредставленийСКД - Булево - 
// * ИмяОбработчика - Строка
// * Тип - Строка - 
// * Имя - Строка - 
// * ИмяТаблицы - Строка - 
Функция НовыйОписаниеПредставления() Экспорт                                        
	ОписаниеПредставления = Новый Структура();	 
	ОписаниеПредставления.Вставить("Тип", "ОписаниеПредставления");   
	ОписаниеПредставления.Вставить("Поля", Новый Массив); 
	ОписаниеПредставления.Вставить("ОписаниеВТФильтр");
	ОписаниеПредставления.Вставить("ОписаниеПараметров", Новый Массив);  
	ОписаниеПредставления.Вставить("ОписаниеОтбора");
	ОписаниеПредставления.Вставить("ПоддерживаетсяПсевдонимыПолей", Ложь);
	ОписаниеПредставления.Вставить("ПоддерживаютсяИндексы", Ложь); 
	ОписаниеПредставления.Вставить("ПоддерживаетсяПолучениеРезультатаЗапроса", Ложь);
	ОписаниеПредставления.Вставить("ИмяФормируемойВТПоУмолчанию", ""); 
	ОписаниеПредставления.Вставить("ДоступноВМеханизмеПредставленийСКД", Ложь);
	ОписаниеПредставления.Вставить("ИмяВТДляСКД", ""); 
	ОписаниеПредставления.Вставить("ПоддерживаетсяУказаниеИмяВТРезультат", Ложь);  
	ОписаниеПредставления.Вставить("ПоляПоИменам", Новый Соответствие); 
	ОписаниеПредставления.Вставить("ПараметрыПоИменам", Новый Соответствие); 
	ОписаниеПредставления.Вставить("ИмяОбработчика", ""); 
	ОписаниеПредставления.Вставить("Имя", "");  
	ОписаниеПредставления.Вставить("ИмяТаблицы", ""); 
	
	Возврат ОписаниеПредставления;
КонецФункции	                  

// Новый поле представления.
// 
// Возвращаемое значение:
//  Структура - Новый поле представления:
// * Тип - Строка - 
// * Имя - Строка - 
// * ТипЗначения - ОписаниеТипов, Неопределено - 
// * ДоступноПриНаличииПодсистемы - Строка, Неопределено - 
Функция НовыйПолеПредставления() Экспорт 
	Поле = Новый Структура; 
	Поле.Вставить("Тип", "ПолеПредставления");
	Поле.Вставить("Имя", "");
	Поле.Вставить("ТипЗначения", Неопределено);
	Поле.Вставить("ДоступноПриНаличииПодсистемы", Неопределено);  
	
	Возврат Поле;
КонецФункции

Функция НовыйПолеФильтра() Экспорт
	Поле = Новый Структура;  
	Поле.Вставить("Имя", "");
	Поле.Вставить("Обязательный", Ложь); 
	Поле.Вставить("ТипЗначения");
	
	Возврат Поле;
КонецФункции

// Новый описание  ВТФильтр.
// 
// Возвращаемое значение:
//  Структура - Новый описание типа параметра ВТФильтр:
// * Тип - Строка - 
// * ПоддерживаютсяПсевдонимы - Булево - 
// * ПоддерживаетсяИмяВТФильтр - Булево - 
// * ИмяВТПоУмолчанию - Строка - 
// * ПоддерживаетсяТЗФильтр - Булево - 
// * ПоляФильтра - Массив из см. НовыйПолеФильтра - 
// * Обязательный - Булево
// * _ПоляФильтраПоИменам - Соответствие из КлючИЗначение - 
Функция НовыйОписаниеВТФильтр() Экспорт
	ОписаниеТипаПараметра = Новый Структура("Тип", "ОписаниеВТФильтра");
	ОписаниеТипаПараметра.Вставить("ПоддерживаютсяПсевдонимы", Ложь);  
	ОписаниеТипаПараметра.Вставить("ПоддерживаетсяИмяВТФильтр", Ложь);
	ОписаниеТипаПараметра.Вставить("ИмяВТПоУмолчанию", ""); 
	ОписаниеТипаПараметра.Вставить("ПоддерживаетсяТЗФильтр", Ложь);
	ОписаниеТипаПараметра.Вставить("ПоляФильтра", Новый Массив); 
	ОписаниеТипаПараметра.Вставить("Обязательный", Истина); 
	ОписаниеТипаПараметра.Вставить("_ПоляФильтраПоИменам", Новый Соответствие);
		
	Возврат ОписаниеТипаПараметра; 	
КонецФункции

// Новый описание параметра константа.
// 
// Возвращаемое значение:
//  Структура - Новый описание параметра константа:
// * Тип - Строка - 
// * Обязательный - Булево - 
// * Имя - Строка - 
// * ЗначениеПоУмолчанию - Произвольный - 
// * ДопустимПараметрЗапроса - Булево - 
// * ТипКонстанты - Неопределено - 
// * ДоступныеЗначения - Массив из Произвольный -
Функция НовыйОписаниеПараметраКонстанта() Экспорт
	ОписаниеПараметра = Новый Структура();   
	ОписаниеПараметра.Вставить("Тип", "ОписаниеПараметраКонстанта");
    ОписаниеПараметра.Вставить("Обязательный", Истина);	
	ОписаниеПараметра.Вставить("Имя", "");   
	ОписаниеПараметра.Вставить("ЗначениеПоУмолчанию", Неопределено); 
	ОписаниеПараметра.Вставить("ДопустимПараметрЗапроса", Ложь); 
	ОписаниеПараметра.Вставить("ТипКонстанты", Неопределено); 
	ОписаниеПараметра.Вставить("ДоступныеЗначения", Новый Массив());
	
	Возврат ОписаниеПараметра; 	
КонецФункции 

// Новый справка.
// 
// Возвращаемое значение:
//  Структура - Новый справка:
// * Имя - Строка - 
// * Описание - Строка - 
// * СправкаВТФильтр - Неопределено - 
// * СправкаПараметры - Массив из Произвольный - 
Функция НовыйСправка() Экспорт
	Справка = Новый Структура();
	Справка.Вставить("Имя", "");
	Справка.Вставить("Описание", "");
	Справка.Вставить("СправкаВТФильтр", Неопределено);
	Справка.Вставить("СправкаПараметры", Новый Массив());
	
	Возврат Справка;
КонецФункции

//// Новый описание отбора.
//// 
//// Возвращаемое значение:
////  Структура - Новый описание отбора:
//// * ДоступенВПараметрах - Булево - 
//// * ПробрасыватьОтборИзСекцииГДЕ - Булево - 
//// * ДоступныеПоля - Массив из Строка - список полей исполняемого представления, доступных для отбора
//// * ПоддерживаемыеОперации - Структура - дополнительные возможности для выражений отбора:
//// ** ИЛИ - Булево - 
//// ** Сравнение - Булево - 
//// ** ВСписок - Булево - 
//// ** МЕЖДУ - Булево - 
//// ** ПОДОБНО - Булево - 
//// ** ВИерархии - Булево - 
//// ** ВложенныйЗапрос - Булево - 
//// ** СписокВыражений - Булево - 
//// ** РазыменованиеПолей - Булево - 
//// ** ЯзыкВыражений - Булево - 
//Функция НовыйОписаниеОтбора() Экспорт
//    ОписаниеОтбора = Новый Структура();
//    
//    // Базовые настройки
//    ОписаниеОтбора.Вставить("ДоступенВПараметрах", Истина);
//    ОписаниеОтбора.Вставить("ПробрасыватьОтборИзСекцииГДЕ", Истина);
//    
//    // Достпные поля
//    ОписаниеОтбора.Вставить("ДоступныеПоля", Новый Массив());
//    
//    // Поддерживаемые операции (можно сделать как битовые флаги)
//    ПоддерживаемыеОперации = Новый Структура;
//    ПоддерживаемыеОперации.Вставить("ИЛИ", Ложь); 
//    ПоддерживаемыеОперации.Вставить("СравнениеКонстант", Ложь); 
//    ПоддерживаемыеОперации.Вставить("СравнениеПолейИсточника", Ложь); 
//    ПоддерживаемыеОперации.Вставить("МЕЖДУ", Ложь);          
//    ПоддерживаемыеОперации.Вставить("ПОДОБНО", Ложь);          
//    ПоддерживаемыеОперации.Вставить("ВложенныйЗапрос", Ложь); 
//    ПоддерживаемыеОперации.Вставить("СписокВыражений", Ложь); 
//    ПоддерживаемыеОперации.Вставить("РазыменованиеПолей", Ложь); 
//    ПоддерживаемыеОперации.Вставить("ЯзыкВыражений", Ложь); 
//    ОписаниеОтбора.Вставить("ПоддерживаемыеОперации", ПоддерживаемыеОперации);
//        
//    Возврат ОписаниеОтбора;
//КонецФункции

// Создает и возвращает структуру, описывающую возможности фильтрации данных
// для исполняемого представления.
//
// Фильтрация может быть применена двумя способами:
// 1. Напрямую: через передачу выражения в параметр "Отбор" самого представления.
// 2. Автоматически: через "проброс" (делегирование) подходящих условий из секции "ГДЕ"
//    основного запроса.
//
// По умолчанию, для фильтрации доступны следующие базовые операции, которые не требуют
// явного включения флагов в "ДополнительныеОперации":
//  - Все операции сравнения (`=`, `<>`, `>`, `<`, `>=`, `<=`) поля с константой или параметром.
//    (например, `ГДЕ Поле > 10` или `ГДЕ Поле <> &Параметр`).
//  - Оператор `В` (и `НЕ В`) со списком констант или параметром-массивом.
//    (например, `ГДЕ Поле В (1, 2, 3)`).
//  - Оператор `В ИЕРАРХИИ` (и `НЕ В ИЕРАРХИИ`) с параметром.
//    (например, `ГДЕ Номенклатура В ИЕРАРХИИ (&Группа)`).
//
// Для поддержки более сложных конструкций необходимо явно разрешить их, установив
// соответствующие флаги.
//
// Возвращаемое значение:
//  Структура - Описание возможностей отбора для исполняемого представления:
//
// * ПробрасыватьОтборИзСекцииГДЕ - Булево - Основной флаг, включающий или отключающий
//       автоматический проброс отбора из секции "ГДЕ".
//
// * ДоступенВПараметрах - Булево - Разрешает передавать выражение отбора напрямую через
//       параметры виртуальной таблицы в формате `ИмяПредставления(Отбор = (Выражение))`.
//
// * ДоступныеПоля - Массив из Строка - Список имен полей, которые могут быть
//       использованы в условиях отбора.
//
// * ДополнительныеОперации - Структура - Контейнер флагов, разрешающих использование
//       продвинутых операций в отборах:
//
// 		** ИЛИ - Булево - Разрешает использование логического оператора `ИЛИ`.
//
// 		** СравнениеПолейИсточника - Булево - Разрешает сравнение полей не только с константами, но и
//       с другими полями того же источника (например, `ГДЕ Источник.Поле1 > Источник.Поле2`).
//
// 		** МЕЖДУ - Булево - Разрешает использование оператора `МЕЖДУ`.
//
// 		** ПОДОБНО - Булево - Разрешает использование оператора `ПОДОБНО`.
//
// 		** ВложенныйЗапрос - Булево - Разрешает использовать в правой части операторов
//       сравнения вложенный запрос, возвращающий одно значение.
//
// 		** СписокВыражений - Булево - Разрешает использование кортежей (списков полей)
//       в условиях (например, `ГДЕ (Поле1, Поле2) В ((1, "А"))`).
//
// 		** РазыменованиеПолей - Булево - Разрешает "проваливаться" через точку в полях-ссылках
//       (например, `ГДЕ ПолеКонтрагент.ИНН = "12345"`).
//
// 		** ФункцииЯзыкаЗапросов - Булево - Разрешает использование встроенных функций
//       языка запросов (`НАЧАЛОПЕРИОДА`, `ПОДСТРОКА` и др.).
//
// 		** ЯзыкВыражений - Булево - Разрешает использование
//       включая арифметические операции, операторов ВЫБОР, ЕСТЬ NULL и т.п.
//       конструкцию `ВЫБОР`, и все, что разрешают другие флаги.
Функция НовыйОписаниеОтбора() Экспорт
    ОписаниеОтбора = Новый Структура();
    
    // Базовые настройки
    ОписаниеОтбора.Вставить("ДоступенВПараметрах", Ложь);
    ОписаниеОтбора.Вставить("ПробрасыватьОтборИзСекцииГДЕ", Истина);
    
    // Достпные поля
    ОписаниеОтбора.Вставить("ДоступныеПоля", Новый Массив());
    
    // Поддерживаемые операции (можно сделать как битовые флаги)
    ДополнительныеОперации = Новый Структура;
    ДополнительныеОперации.Вставить("ИЛИ", Ложь); 
    ДополнительныеОперации.Вставить("СравнениеПолейИсточника", Ложь); 
    ДополнительныеОперации.Вставить("МЕЖДУ", Ложь);          
    ДополнительныеОперации.Вставить("ПОДОБНО", Ложь);          
    ДополнительныеОперации.Вставить("ВложенныйЗапрос", Ложь); 
    ДополнительныеОперации.Вставить("СписокВыражений", Ложь); 
    ДополнительныеОперации.Вставить("РазыменованиеПолей", Ложь); 
    ДополнительныеОперации.Вставить("ФункцииЯзыкаЗапросов", Ложь);
    ДополнительныеОперации.Вставить("ЯзыкВыражений", Ложь); 
    ОписаниеОтбора.Вставить("ДополнительныеОперации", ДополнительныеОперации);
        
    Возврат ОписаниеОтбора;
КонецФункции

#КонецОбласти
