
#Область СлужебныеПроцедурыИФункции

Функция ОписаниеПолейКадровыхДанныхСотрудников() Экспорт
	Поля = Новый Массив();
	
	// обязательные поля
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Период";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Сотрудник";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Сотрудники");
	Поля.Добавить(Поле);
	
	// стандартные реквизиты
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ТабельныйНомер";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Наименование";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);
	
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ДатаПриема";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ПриказОПриеме";
	Поле.ТипЗначения = Метаданные.РегистрыСведений.КадроваяИсторияСотрудников.СтандартныеРеквизиты.Регистратор.Тип;
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ДатаЗавершенияРаботы";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ДатаУвольнения";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ПриказОбУвольнении";
	Поле.ТипЗначения = Метаданные.РегистрыСведений.КадроваяИсторияСотрудников.СтандартныеРеквизиты.Регистратор.Тип;
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ОформленПоТрудовомуДоговору";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ОсновноеРабочееМестоВОрганизации";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
		
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ПометкаУдаления";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	// кадровая история
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "РабочееМестоПериодРегистрации";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "РабочееМестоРегистратор";
	Поле.ТипЗначения = Метаданные.РегистрыСведений.КадроваяИсторияСотрудников.СтандартныеРеквизиты.Регистратор.Тип;
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Организация";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Организации");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Подразделение";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ПодразделенияОрганизаций");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Должность";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Должности");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ДолжностьПоШтатномуРасписанию";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ШтатноеРасписание");
	Поля.Добавить(Поле);
		
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ВидДоговора";
	Поле.ТипЗначения = Новый ОписаниеТипов("ПеречислениеСсылка.ВидыДоговоровССотрудниками");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ВидСобытия";
	Поле.ТипЗначения = Новый ОписаниеТипов("ПеречислениеСсылка.ВидыКадровыхСобытий");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "КоличествоСтавок";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыРасширеннаяПодсистемы") Тогда
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ДоляНеполногоРабочегоВремени";
		Поле.ТипЗначения = Новый ОписаниеТипов("Число");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ЭтоГоловнойСотрудник";
		Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
	КонецЕсли;
	
	// виды занятости 
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ВидЗанятостиПериодРегистрации";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ВидЗанятостиРегистратор";
	Поле.ТипЗначения = Метаданные.РегистрыСведений.ВидыЗанятостиСотрудников.СтандартныеРеквизиты.Регистратор.Тип;
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ВидЗанятости";
	Поле.ТипЗначения = Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЗанятости");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ВидЗанятостиРегламентированный";
	Поле.ТипЗначения = Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЗанятости");
	Поля.Добавить(Поле);
	
	// плановые авансы
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "АвансПериодРегистрации";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "АвансРегистратор";
	Поле.ТипЗначения = Метаданные.РегистрыСведений.ПлановыеАвансы.СтандартныеРеквизиты.Регистратор.Тип;
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СпособРасчетаАванса";
	Поле.ТипЗначения = Новый ОписаниеТипов("ПеречислениеСсылка.СпособыРасчетаАванса");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Аванс";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);
	
	// сведения об оплате
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ОплатаТрудаПериодЗаписи";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ОплатаТрудаРегистратор";
	Поле.ТипЗначения = Метаданные.РегистрыСведений.ПлановыеНачисления.СтандартныеРеквизиты.Регистратор.Тип;
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ТарифнаяСтавка";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ФОТ";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Надбавка";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ОсновноеНачисление";
	Поле.ТипЗначения = Новый ОписаниеТипов("ПланВидовРасчетаСсылка.Начисления");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ПоказательТарифнойСтавки";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ПоказателиРасчетаЗарплаты");
	Поля.Добавить(Поле);
	
	// условия работы
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "РайонныйКоэффициент";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "РайонныйКоэффициентРФ";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);
	
	// трудовые книжки
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЗаявленияОПредоставленииСведенийОТрудовойДеятельности";
	Поле.ТипЗначения = Новый ОписаниеТипов("ДокументСсылка.ЗаявленияОПредоставленииСведенийОТрудовойДеятельности");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиДата";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиВид";
	Поле.ТипЗначения = Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЗаявленийОПредоставленииСведенийОТрудовойДеятельности");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиПередано";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЗаявленияОПредоставленииСведенийОТрудовойДеятельностиОтозвано";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ТрудоваяФункция";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ТрудовыеФункции");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "КодПоОКЗ";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "МероприятияТрудовойДеятельностиПередавались";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "МероприятияТрудовойДеятельностиДоНачалаУчетаПередавались";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);

	// согласем КЭДО
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СогласиеНаПрисоединениеККЭДО";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СогласиеНаПрисоединениеККЭДОСостояние";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СогласиеНаПрисоединениеККЭДОПодтвержден";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СогласиеНаПрисоединениеККЭДОДатаНачала";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СогласиеНаПрисоединениеККЭДОДатаОкончания";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);

	// зарплатные проекты

	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЗарплатныйПроектДатаОткрытияЛицевогоСчета";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЗарплатныйПроектРегистратор";
	Поле.ТипЗначения = Метаданные.РегистрыСведений.ЛицевыеСчетаСотрудниковПоЗарплатнымПроектам.Реквизиты.ДокументОснование.Тип;
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЗарплатныйПроект";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ЗарплатныеПроекты");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "НомерЛицевогоСчета";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);
	
	// классы условий труда
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "КлассУсловийТрудаПериодРегистрации";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "КлассУсловийТруда";
	Поле.ТипЗначения = Новый ОписаниеТипов("ПеречислениеСсылка.КлассыУсловийТрудаПоРезультатамСпециальнойОценки");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "КлассУсловийТрудаДатаРегистрацииИзменений";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);
	
	// условия опеки
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЯвляетсяОпекуномПенсионером";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	// тарифные сетки
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ГосударственнаяСлужба") Тогда
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ТарифнаяСетка";
		Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ТарифныеСетки");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыПриложения.ГосударственнаяСлужба";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ТарифнаяСеткаНадбавки";
		Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ТарифныеСетки");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыПриложения.ГосударственнаяСлужба";
		Поля.Добавить(Поле);
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыРасширеннаяПодсистемы") Тогда
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "РазрядКатегорияПериодРегистрации";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "РазрядКатегорияРегистратор";
		Поле.ТипЗначения = Метаданные.РегистрыСведений.РазрядыКатегорииСотрудников.СтандартныеРеквизиты.Регистратор.Тип;
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "РазрядКатегория";
		Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.РазрядыКатегорииДолжностей");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
	КонецЕсли;
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЯвляетсяЧленомЛетногоЭкипажа";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЯвляетсяШахтером";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЯвляетсяФармацевтом";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЯвляетсяПрокурором";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЯвляетсяСудьей";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "РасчетОтпускаПоРабочимДням";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЯвляетсяВоеннослужащим";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЯвляетсяВоеннослужащимПоПризыву";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЯвляетсяПедагогом";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "РаботаетВСтуденческомОтряде";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЯвляетсяРаботникомСДосрочнойПенсией";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЯвляетсяЧленомЭкипажаСуднаПодФлагомРФ";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ПрименяемыйЛьготныйТерриториальныйТариф";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	// территории
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыРасширеннаяПодсистемы") Тогда
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ТерриторияПериодРегистрации";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ТерриторияРегистратор";
		Поле.ТипЗначения = Метаданные.РегистрыСведений.ТерриторииСотрудников.СтандартныеРеквизиты.Регистратор.Тип;
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "Территория";
		Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ТерриторииВыполненияРабот");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ТерриторияВыполненияРаботВОрганизации";
		Поле.ТипЗначения = Метаданные.ОпределяемыеТипы.ТерриторияВыполненияРаботВОрганизации.Тип;
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ТекущаяТерритория";
		Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ТерриторииВыполненияРабот");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
	
		// графики
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ГрафикРаботыПериодРегистрации";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ГрафикРаботыРегистратор";
		Поле.ТипЗначения = Метаданные.РегистрыСведений.ГрафикРаботыСотрудников.СтандартныеРеквизиты.Регистратор.Тип;
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ГрафикРаботы";
		Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ГрафикиРаботыСотрудников");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
	
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "СуммированныйУчетРабочегоВремени";
		Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "СреднемесячноеЧислоЧасов";
		Поле.ТипЗначения = Новый ОписаниеТипов("Число");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "СреднемесячноеЧислоДней";
		Поле.ТипЗначения = Новый ОписаниеТипов("Число");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ПКУПериодРегистрации";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ПКУРегистратор";
		Поле.ТипЗначения = Метаданные.РегистрыСведений.ПКУСотрудников.СтандартныеРеквизиты.Регистратор.Тип;
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
			
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ПКУ";
		Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.РазрядыКатегорииДолжностей");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "СостояниеПериодРегистрации";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "Состояние";
		Поле.ТипЗначения = Новый ОписаниеТипов("ПеречислениеСсылка.СостоянияСотрудника");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ПредставительНанимателя";
		Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ДолжностьПредставителяНанимателя";
		Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ОснованиеПредставителя";
		Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ВидАктаГосоргана";
		Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ТрудовойДоговорДатаОкончания";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ДатаОкончания";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "СрочныйДоговор";
		Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "СезонныйДоговор";
		Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "СрокЗаключенияДоговора";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ОборудованиеРабочегоМеста";
		Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ИныеУсловияДоговора";
		Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ОснованиеСрочногоДоговора";
		Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "КраткосрочныйТрудовойДоговор";
		Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ДатаДоговораКонтракта";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "НомерДоговораКонтракта";
		Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ТрудовойДоговорДата";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ТрудовойДоговорНомер";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ТрудовойДоговорДатаНачала";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ДатаНачала";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ПоступлениеНаСлужбуВпервые";
		Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
	//	места выплаты
	
		Типы = Новый Массив();
		Типы.Добавить(Тип("СправочникСсылка.Сотрудники"));
		Типы.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций"));
		Типы.Добавить(Тип("СправочникСсылка.Организации"));
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ВладелецМестаВыплаты";
		Поле.ТипЗначения = Новый ОписаниеТипов(Типы);
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ВидМестаВыплаты";
		Поле.ТипЗначения = Новый ОписаниеТипов("ПеречислениеСсылка.ВидыМестВыплатыЗарплаты");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "МестоВыплаты";
		Поле.ТипЗначения = Метаданные.ОпределяемыеТипы.МестоВыплатыЗарплатыСотрудников.Тип;
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		// совокупные ставки
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "СовокупнаяТарифнаяСтавкаПериодРегистрации";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "СовокупнаяТарифнаяСтавкаРегистратор";
		Поле.ТипЗначения = Метаданные.РегистрыСведений.ПлановыйФОТИтоги.Реквизиты.РегистраторСобытия.Тип;
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "СовокупнаяТарифнаяСтавка";
		Поле.ТипЗначения = Новый ОписаниеТипов("Число");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ВидСовокупнойТарифнойСтавки";
		Поле.ТипЗначения = Новый ОписаниеТипов("ПеречислениеСсылка.ВидыТарифныхСтавок");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
			
	//	ДобавитьПолеСведенийОПорядкеРасчетаСтоимостиЕдиницыВремени
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ПорядокРасчетаСтоимостиЕдиницыВремениПериодРегистрации";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ПорядокРасчетаСтоимостиЕдиницыВремениРегистратор";
		Поле.ТипЗначения = Метаданные.РегистрыСведений.ПорядокРасчетаСтоимостиЕдиницыВремениСотрудников.СтандартныеРеквизиты.Регистратор.Тип;
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ПорядокРасчетаСтоимостиЕдиницыВремени";
		Поле.ТипЗначения = Новый ОписаниеТипов("ПеречислениеСсылка.ПорядокРасчетаСтоимостиЕдиницыВремениОплатыТруда");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
		Поля.Добавить(Поле);
	КонецЕсли;
//ДобавитьПолеСведенийОДистанционнойРаботеСотрудников
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.КадровыйУчет.ДистанционнаяРабота") Тогда
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "РаботаетДистанционноПериодРегистрации";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыПриложения.КадровыйУчет.ДистанционнаяРабота";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "РаботаетДистанционноРегистратор";
		Поле.ТипЗначения = Метаданные.РегистрыСведений.ДистанционнаяРаботаСотрудников.СтандартныеРеквизиты.Регистратор.Тип;
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыПриложения.КадровыйУчет.ДистанционнаяРабота";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "РаботаетДистанционно";
		Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыПриложения.КадровыйУчет.ДистанционнаяРабота";
		Поля.Добавить(Поле);
	КонецЕсли;

//ЕстьПодсистемаРабочиеМестаОхраныТруда
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.РабочиеМестаОхраныТруда") Тогда	
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "РабочееМестоОхраныТрудаПериодРегистрации";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыПриложения.РабочиеМестаОхраныТруда";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "РабочееМестоОхраныТрудаРегистратор";
		Поле.ТипЗначения = Метаданные.РегистрыСведений.РабочиеМестаСотрудников.СтандартныеРеквизиты.Регистратор.Тип;
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыПриложения.РабочиеМестаОхраныТруда";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "РабочееМестоОхраныТруда";
		Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.РабочиеМестаОхраныТруда");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыПриложения.РабочиеМестаОхраныТруда";
		Поля.Добавить(Поле);
	КонецЕсли;
	
//	ЗарплатаКадрыКорпоративнаяПодсистемы.Грейды"
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.Грейды") Тогда	
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ГрейдПериодРегистрации";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыКорпоративнаяПодсистемы.Грейды";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ГрейдРегистратор";
		Поле.ТипЗначения = Метаданные.РегистрыСведений.ГрейдыСотрудников.СтандартныеРеквизиты.Регистратор.Тип;
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыКорпоративнаяПодсистемы.Грейды";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "Грейд";
		Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Грейды");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыКорпоративнаяПодсистемы.Грейды";
		Поля.Добавить(Поле);
	КонецЕсли;
	
//	ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура") Тогда	
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "МестоВСтруктуреПредприятия";
		Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыПриложения.ОрганизационнаяСтруктура";
		Поля.Добавить(Поле);
	КонецЕсли;
	
//	ЗарплатаКадрыКорпоративнаяПодсистемы.ИспытательныйСрокСотрудников
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ИспытательныйСрокСотрудников") Тогда
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "НаходитсяНаИспытательномСроке";
		Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыКорпоративнаяПодсистемы.ИспытательныйСрокСотрудников";
		Поля.Добавить(Поле);
		
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "ИспытательныйСрокДатаЗавершения";
		Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыКорпоративнаяПодсистемы.ИспытательныйСрокСотрудников";
		Поля.Добавить(Поле);
	КонецЕсли;

//	ОстаткиОтпусков
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "КоличествоДнейОтпускаОбщее";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "КоличествоДнейОсновногоОтпуска";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "КоличествоДнейОтпускаЧАЭС";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "КоличествоДнейСеверногоОтпуска";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
		
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "КоличествоДнейОтпускаЗаВредность";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
//	ДобавитьПолеСведенийОСтажеРаботыНаПредприятии

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СтажРаботыНаПредприятииЛет";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СтажРаботыНаПредприятииМесяцев";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СтажРаботыНаПредприятииДней";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);

//	ЗарплатаКадрыПриложения.РуководителиПодразделений
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "РуководительСтруктурногоПодразделения";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ДолжностьРуководителяСтруктурногоПодразделения";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.Должности");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);

//	ЗарплатаКадрыПриложения.Медицина
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.Медицина") Тогда	
		Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
		Поле.Имя = "РаботаВМедицинскомУчреждении";
		Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
		Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыПриложения.Медицина";
		Поля.Добавить(Поле);
	КонецЕсли;
	
//	Приостановка договров
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ТрудовойДоговорПриостановлен";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ТрудовойДоговорПриостановленРегистратор";
	Поле.ТипЗначения = Метаданные.РегистрыСведений.ПриостановленияТрудовыхДоговоровКонтрактов.СтандартныеРеквизиты.Регистратор.Тип;
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ТрудовойДоговорПриостановленПериод";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ТрудовойДоговорПриостановленОснование";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ОснованияПриостановленияТрудовыхДоговоровКонтрактов");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ТрудовойДоговорПриостановленПланируемаяДатаЗавершения";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ТрудовойДоговорПриостановленНомерПриказа";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ТрудовойДоговорПриостановленДатаПриказа";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
//	Учет затрат 

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "УчетЗатратДокументОснование";
	Поле.ТипЗначения = Метаданные.РегистрыСведений.БухучетЗарплатыСотрудников.СтандартныеРеквизиты.Регистратор.Тип;
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "УчетЗатратПериодРегистрации";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СпособОтраженияЗарплатыВБухучете";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияЗарплатыВБухУчете");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ОтношениеКЕНВД";
	Поле.ТипЗначения = Новый ОписаниеТипов("ПеречислениеСсылка.ОтношениеКЕНВДЗатратНаЗарплату");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СтатьяФинансирования";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата");
	Поле.ДоступноПриНаличииПодсистемы = "ЗарплатаКадрыРасширеннаяПодсистемы";
	Поля.Добавить(Поле);
	
	ОписаниеПолейФизическихЛиц = ОписаниеПолейКадровыхДанныхФизическихЛиц();
	
	Для Каждого Поле Из ОписаниеПолейФизическихЛиц Цикл
		Поля.Добавить(Поле);
	КонецЦикла;
	
	
 	Возврат Поля;
КонецФункции

Функция ОписаниеПолейКадровыхДанныхФизическихЛиц() Экспорт
	Поля = Новый Массив();
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ФизическоеЛицо";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Возраст";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);
	
	// контакьная информация
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "EMailПредставление";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "АдресДляИнформированияПредставление";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "АдресДляИнформированияСтрана";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "АдресДляИнформированияРегион";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "АдресДляИнформированияГород";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "АдресЗаПределамиРФПредставление";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "АдресЗаПределамиРФСтрана";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "АдресМестаПроживанияПредставление";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "АдресМестаПроживанияСтрана";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "АдресМестаПроживанияРегион";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "АдресМестаПроживанияГород";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "АдресПоПропискеПредставление";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "АдресПоПропискеСтрана";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "АдресПоПропискеРегион";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "АдресПоПропискеГород";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ТелефонДомашнийПредставление";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ТелефонРабочийПредставление";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ТелефонМобильныйПредставление";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);
	
	// инвалидность
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ИнвалидностьПериодРегистрации";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ИнвалидностьДатаВыдачи";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Инвалидность";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ИнвалидностьСрокДействияСправки";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ИнвалидностьГруппаИнвалидности";
	Поле.ТипЗначения = Новый ОписаниеТипов("ПеречислениеСсылка.ГруппыИнвалидности");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ИнвалидностьСерияСправки";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ИнвалидностьНомерСправки";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ИнвалидностьПроцентПотериТрудоспособности";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);
	
	//ФИО
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ФИОПериодРегистрации";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Фамилия";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Имя";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Отчество";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ФИОПолные";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ИОФамилия";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ФамилияИО";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);
	
	// Гражданстов
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ГражданствоПериодРегистрации";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ИННВСтранеГражданства";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Страна";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.СтраныМира");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ДокументВид";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ВидыДокументовФизическихЛиц");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ДокументПериодРегистрации";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ДокументДатаВыдачи";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ДокументСрокДействия";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ДокументКемВыдан";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ДокументКодМВД";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ДокументКодПодразделения";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ДокументНомер";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ДокументСерия";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ДокументСтранаВыдачи";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ДокументПредставление";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ПодключенККЭДО";
	Поле.ТипЗначения = Новый ОписаниеТипов("Булево");
	Поля.Добавить(Поле);
	
	// ВЗНОСЫ НДФЛ статусы
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ВидЗастрахованногоЛица";
	Поле.ТипЗначения = Новый ОписаниеТипов("ПеречислениеСсылка.ВидыЗастрахованныхЛицОбязательногоСтрахования");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ВидЗастрахованногоЛицаПериодРегистрации";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СтатусНалогоплательщика";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.СтатусыНалогоплательщиковПоНДФЛ");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СтатусНалогоплательщикаПериодРегистрации";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);
	
	// дети родтсвенники брак
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "КоличествоДетей";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "КоличествоИждивенцев";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "КоличествоРодственников";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СостояниеВБраке";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.СостояниеВБраке");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СостояниеВБракеПериодРегистрации";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);
	
	// стаж
	
	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СеверныйСтажЛет";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СеверныйСтажМесяцев";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СеверныйСтажДней";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СтраховойСтажЛет";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СтраховойСтажМесяцев";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СтраховойСтажДней";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "РасширенныйСтраховойСтажЛет";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "РасширенныйСтраховойСтажМесяцев";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "РасширенныйСтраховойСтажДней";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ПрочийСтажЛет";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ПрочийСтажМесяцев";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ПрочийСтажДней";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ПедагогическийСтажЛет";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ПедагогическийСтажМесяцев";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ПедагогическийСтажДней";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ОбщийСтажЛет";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ОбщийСтажМесяцев";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ОбщийСтажДней";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "НепрерывныйСтажЛет";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "НепрерывныйСтажМесяцев";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "НепрерывныйСтажДней";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ОбщийНаучноПедагогическийСтажЛет";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ОбщийНаучноПедагогическийСтажМесяцев";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ОбщийНаучноПедагогическийСтажДней";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СтажНаНадбавкуЗаВыслугуЛетЛет";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СтажНаНадбавкуЗаВыслугуЛетМесяцев";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СтажНаНадбавкуЗаВыслугуЛетДней";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Профессия1";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ПрофессииРабочих");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Профессия2";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ПрофессииРабочих");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Специальность1";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.КлассификаторСпециальностейПоОбразованию");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Специальность2";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.КлассификаторСпециальностейПоОбразованию");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "УченаяСтепеньДатаПрисуждения";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "УченаяСтепеньДиссертационныйСовет";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "УченаяСтепеньОрганизация";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "УченаяСтепеньОтрасльНауки";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "УченаяСтепеньДипломСерияНомер";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "УченаяСтепень";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.УченыеСтепени");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "УченоеЗваниеДатаПрисвоения";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "УченоеЗваниеАттестатНомер";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "УченоеЗваниеАттестатСерия";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "УченоеЗваниеОрганизация";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "УченоеЗвание";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.УченыеЗвания");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "УченоеЗваниеСпециальность";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.КлассификаторСпециальностейПоОбразованию");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ВладеемыйЯзык1";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ЯзыкиНародовМира");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ВладеемыйЯзык1СтепеньЗнания";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.СтепениЗнанияЯзыка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ВладеемыйЯзык2";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ЯзыкиНародовМира");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ВладеемыйЯзык2СтепеньЗнания";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.СтепениЗнанияЯзыка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ОбразованиеПервое";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ОбразованиеВторое";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ОбразованиеВысшее";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ОбразованиеПослевузовское";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ПолученныеОбразования";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ПовышениеКвалификации";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Переподготовка";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Награды";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Документы";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ЗнанияЯзыков";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Профессии";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Специальности";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ТрудоваяДеятельность";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СоставСемьи";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "МедицинскийСтажЛет";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "МедицинскийСтажМесяцев";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "МедицинскийСтажДней";
	Поле.ТипЗначения = Новый ОписаниеТипов("Число");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Язык";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ЯзыкиНародовМира");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СтепеньЗнания";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.СтепениЗнанияЯзыка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Профессия";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.ПрофессииРабочих");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ВидОбразования";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ВидПослевузовскогоОбразования";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "ВидДополнительногоОбучения";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "УчебноеЗаведение";
	Поле.ТипЗначения = Новый ОписаниеТипов("Строка");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Начало";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Окончание";
	Поле.ТипЗначения = Новый ОписаниеТипов("Дата");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "СпециальностьПоОбразованию";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.КлассификаторСпециальностейПоОбразованию");
	Поля.Добавить(Поле);

	Поле = ЭлементыМоделиОписанияПредставлений.НовыйПолеПредставления();
	Поле.Имя = "Специальность";
	Поле.ТипЗначения = Новый ОписаниеТипов("СправочникСсылка.КлассификаторСпециальностейПоОбразованию");
	Поля.Добавить(Поле);

	Возврат Поля;
КонецФункции

#КонецОбласти
