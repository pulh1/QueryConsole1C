#Область СлужебныеПроцедурыИФункции

// Новый элемент модели запроса.
// 
// Параметры:
//  Тип - Строка - Тип
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый элемент модели запроса:
// * Тип - Строка - 
Функция НовыйЭлементМоделиЗапроса(Тип, ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = Новый Структура("Тип", Тип);
	Возврат ЭлементМодели;
КонецФункции	

// Новый описание временной таблицы.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый описание временной таблицы:
// * Тип - Строка - 
// * Колонки - Соответствие из КлючИЗначение:
// 	** Ключ - Строка
// 	** Значение - ОписаниеТипов
// * ПорядокКолонок - Массив из Строка
// * Имя - Строка - 
// * Идентификатор - УникальныйИдентификатор - 
// * ИндексЗапросаСоздания - Число - 
// * ИндексЗапросаУничтожения - Число - 
// * СозданаВЭтомПакете - Булево - 
Функция НовыйОписаниеВременнойТаблицы(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ОписаниеВременнойТаблицы", ТекущийТокен);
	ЭлементМодели.Вставить("Колонки", Новый Соответствие);  
	ЭлементМодели.Вставить("ПорядокКолонок", Новый Массив);     
	ЭлементМодели.Вставить("Имя", "");
	ЭлементМодели.Вставить("Идентификатор", Новый  УникальныйИдентификатор());
	ЭлементМодели.Вставить("ИндексЗапросаСоздания", -1);
	ЭлементМодели.Вставить("ИндексЗапросаУничтожения", -1);
	ЭлементМодели.Вставить("СозданаВЭтомПакете", Истина);
	
	Возврат ЭлементМодели;
КонецФункции	

// Новый пакет запросов.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый пакет запросов:
// * Тип - Строка - 
// * Элементы - Массив из см. НовыйЗапросВыбора, Массив из см. НовыйЗапросУничтожения 
Функция НовыйПакетЗапросов(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ПакетЗапросов", ТекущийТокен);
	ЭлементМодели.Вставить("Элементы", Новый Массив());
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйЗапросУничтожения(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ЗапросУничтожения", ТекущийТокен);
	ЭлементМодели.Вставить("ИмяТаблицы", "");
	ЭлементМодели.Вставить("ОписаниеВТ");
	Возврат ЭлементМодели;
КонецФункции

// Новый запрос выбора.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый запрос выбора:
// * Тип - Строка -
// * Операторы - Массив из см.  НовыйОператорЗапроса
// * Колонки - Массив из см. НовыйКолонкаЗапроса
// * КолонкиПоПсевдонимам - Соответствие из КлючИЗначение:
// 	** Ключ - Строка
// 	** Значение - см. НовыйКолонкаЗапроса
// * Порядок - Массив из см. НовыйЭлементПорядка
// * Индекс - см. НовыйСписокВыражений
// * КонтрольныеТочкиИтогов - Массив из см. НовыйКонтрольнаяТочкаИтогов
// * ВыраженияИтогов - Массив из см. НовыйВыражениеМоделиЗапроса
// * ВыбиратьРазрешенные - Булево
// * ТаблицаДляПомещения - Строка
// * Автопорядок - Булево
// * ОбщиеИтоги - Булево
// * Характеристики - Массив из Произвольный
// * ПоляВыбораКомпоновкиДанных - Произвольный
// * ОписаниеВТ - см. НовыйОписаниеВременнойТаблицы
Функция НовыйЗапросВыбора(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ЗапросВыбора", ТекущийТокен);
	ЭлементМодели.Вставить("Операторы", Новый Массив());
	ЭлементМодели.Вставить("Колонки", Новый Массив());  
	ЭлементМодели.Вставить("КолонкиПоПсевдонимам", Новый Соответствие());
	ЭлементМодели.Вставить("Порядок", Новый Массив());
	ЭлементМодели.Вставить("Индекс", НовыйСписокВыражений());
	ЭлементМодели.Вставить("КонтрольныеТочкиИтогов", Новый Массив());
	ЭлементМодели.Вставить("ВыраженияИтогов", Новый Массив());
	ЭлементМодели.Вставить("ВыбиратьРазрешенные", Ложь);
	ЭлементМодели.Вставить("ТаблицаДляПомещения");  
	ЭлементМодели.Вставить("Автопорядок", Ложь);
	ЭлементМодели.Вставить("ОбщиеИтоги", Ложь);
	ЭлементМодели.Вставить("Характеристики", Новый Массив()); // TODO поддержать в граматике и потсроении модели
	ЭлементМодели.Вставить("ПоляВыбораКомпоновкиДанных", Новый Массив());
	ЭлементМодели.Вставить("ОписаниеВТ");
	Возврат ЭлементМодели;
КонецФункции

// Новый оператор запроса.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый оператор запроса:
// * Источники - см. НовыйИстчоникиЗапроса
// * ВыбираемыеПоля - Массив из см. НовыйПолеЗапроса
// * Отбор - см. НовыйВыражениеМоделиЗапроса -
// 		   - Массив из см. НовыйВыражениеМоделиЗапроса -	
// * ТаблицыДляИзменения - Массив из Строка 
// * КоличествоПолучаемыхЗаписей - Число - 
// * ТипОбъединения - Строка - 
// * Группировка - см. НовыйСписокВыражений
// * ВыбиратьРазличные - Булево - 
// * ВыбиратьДляИзменения - Булево - 
// * ВыраженияОтбораКомпоновкиДанных - Произвольный
// * ОтборСгруппированных - см. НовыйВыражениеМоделиЗапроса -
// 		                  - Массив из см. НовыйВыражениеМоделиЗапроса -	
Функция НовыйОператорЗапроса(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ОператорЗапроса", ТекущийТокен);
	ЭлементМодели.Вставить("Источники", НовыйИстчоникиЗапроса());
	ЭлементМодели.Вставить("ВыбираемыеПоля", Новый Массив());
	ЭлементМодели.Вставить("Отбор");
	ЭлементМодели.Вставить("ТаблицыДляИзменения", Новый Массив());
	ЭлементМодели.Вставить("КоличествоПолучаемыхЗаписей", Неопределено);
	ЭлементМодели.Вставить("ТипОбъединения", НовыйТипОбъединениеВсе());
	ЭлементМодели.Вставить("Группировка", НовыйСписокВыражений());
	ЭлементМодели.Вставить("ВыбиратьРазличные", Ложь);
	ЭлементМодели.Вставить("ВыбиратьДляИзменения", Ложь);
	ЭлементМодели.Вставить("ВыраженияОтбораКомпоновкиДанных");
	ЭлементМодели.Вставить("ОтборСгруппированных");
	
	ЭлементМодели.Вставить("__ВыбиратьРазрешенные", Ложь);
	ЭлементМодели.Вставить("__ТаблицаДляПомещения");
	
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйТипОбъединениеВсе(ТекущийТокен = Неопределено) Экспорт
	Возврат "ОбъединитьВсе";
КонецФункции

Функция НовыйТипОбъединение(ТекущийТокен = Неопределено) Экспорт
	Возврат "Объединить";
КонецФункции

Функция НовыйВыбираемыеПоля(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = Новый Массив();
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйВыражиениеВсеПоля(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = "*";
	Возврат ЭлементМодели;
КонецФункции

// Новый колонка запроса.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый колонка запроса:
// * Тип - Строка - 
// * Идентификатор - УникальныйИдентификатор 
// * Имя - Строка
// * ТипЗначения - ОписаниеТипов
Функция НовыйКолонкаЗапроса(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("КолонкаЗапроса", ТекущийТокен);
	ЭлементМодели.Вставить("Идентификатор", Новый УникальныйИдентификатор()); 
	ЭлементМодели.Вставить("Имя", ""); 
	ЭлементМодели.Вставить("ТипЗначения");   

	Возврат ЭлементМодели;	
КонецФункции

// Новый ссылка на колонку запроса.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый ссылка на колонку запроса:
// * Тип - Строка - 
// * Идентификатор - УникальныйИдентификатор - 
Функция НовыйСсылкаНаКолонкуЗапроса(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("СсылкаНаКолонкуЗапроса", ТекущийТокен);
	ЭлементМодели.Вставить("Идентификатор");
	 
	Возврат ЭлементМодели;	
КонецФункции

// Новый поле запроса.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый поле запроса:
// * Выражение - См. НовыйВыражениеМоделиЗапроса
// * Псевдоним - Строка
Функция НовыйПолеЗапроса(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ПолеЗапроса", ТекущийТокен);
	ЭлементМодели.Вставить("Выражение");
	ЭлементМодели.Вставить("Псевдоним"); 
	ЭлементМодели.Вставить("ТипЗначения");   
	ЭлементМодели.Вставить("ИспользуетсяАгрегатнаяФункция", Ложь);
	Возврат ЭлементМодели;
КонецФункции

// Новый истчоники запроса.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый истчоники запроса:
// * Элементы - Массив из см. НовыйИсточник
Функция НовыйИстчоникиЗапроса(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ИстчоникиЗапроса", ТекущийТокен);
	ЭлементМодели.Вставить("Элементы", Новый Массив());
	ЭлементМодели.Вставить("Таблицы", Новый Массив());
	Возврат ЭлементМодели;
КонецФункции

// Новый источник.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый источник:
// * Источник - см. НовыйИсточникДанныхТаблица
// * Соединения - Массив из см. НовыйСоединениеИсточника
// * ИдентификаторИсточника - УникальныйИдентификатор - 
Функция НовыйИсточник(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("Истчоник", ТекущийТокен);
	ЭлементМодели.Вставить("Источник");
	ЭлементМодели.Вставить("Соединения", Новый Массив());  
	ЭлементМодели.Вставить("ИдентификаторИсточника", Новый УникальныйИдентификатор);
	Возврат ЭлементМодели;
КонецФункции

// Новый соединение источника.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый соединение источника:
// * Тип - Строка 
// * Источник - УникальныйИдентификатор 
// * ТипСоединения - Строка 
// * Условие - см. НовыйВыражениеМоделиЗапроса 
// * Опционально - Булево 
Функция НовыйСоединениеИсточника(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("СоединенияИсточника", ТекущийТокен);
	ЭлементМодели.Вставить("Источник");
	ЭлементМодели.Вставить("ТипСоединения");
	ЭлементМодели.Вставить("Условие");
	ЭлементМодели.Вставить("Опционально", Ложь); 
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйТипСоединенияЛевое(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = "Левое";
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйТипСоединенияПравое(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = "Правое";
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйТипСоединенияВнутреннее(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = "Внутреннее";
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйТипСоединенияПолное(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = "Полное";
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйИсточникДанныхВложенныйЗапрос(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ИсточникДанныхВложенныйЗапрос", ТекущийТокен);
	ЭлементМодели.Вставить("ЗапросВыбора");
	ЭлементМодели.Вставить("Псевдоним", "");

	Возврат ЭлементМодели;	
КонецФункции	

Функция НовыйИсточникДанныхТаблицаЗначений(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ИсточникДанныхТаблицаЗначений", ТекущийТокен);
	ЭлементМодели.Вставить("ИмяТаблицы", "");
	ЭлементМодели.Вставить("Псевдоним", "");

	Возврат ЭлементМодели;
КонецФункции

Функция НовыйИсточникДанныхВременнаяТаблица(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ИсточникДанныхВременнаяТаблица", ТекущийТокен);
	ЭлементМодели.Вставить("ИмяТаблицы", "");
	ЭлементМодели.Вставить("Псевдоним", "");  
	ЭлементМодели.Вставить("ОписаниеВТ", Неопределено);

	Возврат ЭлементМодели;
КонецФункции

// Новый источник данных таблица.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый источник данных таблица:
// * Тип - Строка 
// * ИмяТаблицы - Строка
// * Псевдоним - Строка
// * Параметры - см. НовыйСписокВыражений
Функция НовыйИсточникДанныхТаблица(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ИсточникДанныхТаблица", ТекущийТокен);
	ЭлементМодели.Вставить("ИмяТаблицы", "");
	ЭлементМодели.Вставить("Псевдоним", "");
	ЭлементМодели.Вставить("Параметры");

	Возврат ЭлементМодели;
КонецФункции

Функция НовыйСписокПараметров(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = Новый Массив();
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйЭлементыПорядка(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = Новый Массив();
	Возврат ЭлементМодели;
КонецФункции

// Новый элемент порядка.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый элемент порядка:
// * Тип - Строка - 
// * Выражение - см. НовыйВыражениеМоделиЗапроса 
// * Направеление - Строка - 
// * Иерахия - Булево - 
Функция НовыйЭлементПорядка(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ЭлементПорядка", ТекущийТокен);
	ЭлементМодели.Вставить("Выражение");
	ЭлементМодели.Вставить("Направеление", НовыйНаправлениеВозрастание());
	ЭлементМодели.Вставить("Иерахия", Ложь);
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйНаправлениеВозрастание(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = "Возр";
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйНаправлениеУбывание(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = "Убыв";
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйВыраженияИтогов(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = Новый Массив();
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйКонтрольныеТочкиИтогов(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = Новый Массив;
	Возврат ЭлементМодели;
КонецФункции

// Новый контрольная точка итогов.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый контрольная точка итогов:
// * Тип - Строка - 
// * Выражение - см. НовыйВыражениеМоделиЗапроса
// * ТипКонтрольнойТочки - Строка
// * ИмяКолонки - Строка
// * ТипДополненияПериодами - Строка
// * НачалоПериодаДополнения - Строка
// * КонецПериодаДополнения - Строка
Функция НовыйКонтрольнаяТочкаИтогов(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("КонтрольнаяТочкаИтогов", ТекущийТокен);
	ЭлементМодели.Вставить("Выражение");
	ЭлементМодели.Вставить("ТипКонтрольнойТочки");
	ЭлементМодели.Вставить("ИмяКолонки");
	ЭлементМодели.Вставить("ТипДополненияПериодами");
	ЭлементМодели.Вставить("НачалоПериодаДополнения");
	ЭлементМодели.Вставить("КонецПериодаДополнения");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйОбщиеИтоги(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ОбщиеИтоги", ТекущийТокен);
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйТипКонтрольнойТочкиТолькоИерархия(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = "ТолькоИерархия";
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйТипКонтрольнойТочкиИерархия(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = "Иерархия";
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйБинарнаяОперация(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("БинарнаяОперация", ТекущийТокен);
	ЭлементМодели.Вставить("Операция");
	ЭлементМодели.Вставить("ПраваяЧасть");
	ЭлементМодели.Вставить("ЛеваяЧасть");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйОператорМежду(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ОператорМежду", ТекущийТокен);
	ЭлементМодели.Вставить("Операнд");
	ЭлементМодели.Вставить("Инверсия", Ложь);
	ЭлементМодели.Вставить("НачалоИнтервала");
	ЭлементМодели.Вставить("КонецИнтервала");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйОператорПроверкиТипа(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ОператорПроверкиТипа", ТекущийТокен);
	ЭлементМодели.Вставить("Операнд");
	ЭлементМодели.Вставить("ТипСсылочногоПоля");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйОператорПроверкиНаNULL(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ОператорПроверкиНаNULL", ТекущийТокен);
	ЭлементМодели.Вставить("Операнд");
	ЭлементМодели.Вставить("Инверсия", Ложь);

	Возврат ЭлементМодели;
КонецФункции

Функция НовыйОператорВ(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ОператорВ", ТекущийТокен);
	ЭлементМодели.Вставить("Операнд");
	ЭлементМодели.Вставить("Инверсия", Ложь);
	ЭлементМодели.Вставить("Иерахия", Ложь);
	ЭлементМодели.Вставить("Список");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйТипСсылочногоПоля(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ТипСсылочногоПоля", ТекущийТокен);
	ЭлементМодели.Вставить("Группа");
	ЭлементМодели.Вставить("Таблица");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйЛогическоеОтрицание(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ЛогическоеОтрицание", ТекущийТокен);
	ЭлементМодели.Вставить("Выражение");
	ЭлементМодели.Вставить("Количество", 1);
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйОператорПодобно(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ОператорПодобно", ТекущийТокен);
	ЭлементМодели.Вставить("Операнд");
	ЭлементМодели.Вставить("Инверсия", Ложь);
	ЭлементМодели.Вставить("Шаблон");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйУнарнаяОперация(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("УнарнаяОперация", ТекущийТокен);
	ЭлементМодели.Вставить("Выражение");
	ЭлементМодели.Вставить("Знаки", Новый Массив());
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйПолеИсточника(ТекущийТокен = Неопределено) Экспорт 
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ПолеИсточника", ТекущийТокен);
	ЭлементМодели.Вставить("ИдентификаторИсточника", Новый Массив());  
	ЭлементМодели.Вставить("ИмяПоля");
	Возврат ЭлементМодели;	
КонецФункции	

Функция НовыйРазыменование(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("Разыменование", ТекущийТокен);
	ЭлементМодели.Вставить("Элементы", Новый Массив());
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйПоляВложеннойТаблицы(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ПоляВложеннойТаблицы", ТекущийТокен);
	ЭлементМодели.Вставить("Элементы", Новый Массив());
	Возврат ЭлементМодели;
КонецФункции

// Новый список выражений.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый список выражений:
// * Тип - Строка 
// * Элементы - Массив из см. НовыйВыражениеМоделиЗапроса 
Функция НовыйСписокВыражений(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("СписокВыражений", ТекущийТокен);
	ЭлементМодели.Вставить("Элементы", Новый Массив());
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйВыражениеВСкобках(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ВыражениеВСкобках", ТекущийТокен);
	ЭлементМодели.Вставить("Выражение");
	Возврат ЭлементМодели;
КонецФункции    

// Новый выражение модели запроса.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый выражение модели запроса:
// * Тип - Строка
// * Значение - Произвольный
// * ТипЗначения - ОписаниеТипов
// * ИспользуетсяАгрегатнаяФункция - Булево - 
// * ПоляИсточников - Соответствие из Строка, Булево - 
// * ПараметрыЗапроса - Соответствие из КлючИЗначение:
//	** Ключ - Строка
//  ** Значение - см. НовыйОписаниеПараметраЗапроса
Функция НовыйВыражениеМоделиЗапроса(ТекущийТокен = Неопределено) Экспорт 
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ВыражениеМоделиЗапроса", ТекущийТокен);	
	
	ЭлементМодели.Вставить("Значение");
	ЭлементМодели.Вставить("ТипЗначения");
	ЭлементМодели.Вставить("ИспользуетсяАгрегатнаяФункция", Ложь);
	ЭлементМодели.Вставить("ПоляИсточников", Новый Соответствие);
	ЭлементМодели.Вставить("ПараметрыЗапроса", Новый Соответствие);
	
	Возврат ЭлементМодели; 
КонецФункции	

Функция НовыйПриведениеТипа(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ПриведениеТипа", ТекущийТокен);
	ЭлементМодели.Вставить("Выражение");
	ЭлементМодели.Вставить("ОписаниеТипа");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйОписаниеТипаБулево(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ОписаниеТипаБулево", ТекущийТокен);
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйОписаниеТипаДата(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ОписаниеТипаДата", ТекущийТокен);
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйОписаниеТипаЧисло(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ОписаниеТипаЧисло", ТекущийТокен);
	ЭлементМодели.Вставить("Длина", 0);
	ЭлементМодели.Вставить("Точность", 0);
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйОписаниеТипаСтрока(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ОписаниеТипаСтрока", ТекущийТокен);
	ЭлементМодели.Вставить("Длина");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйВыбор(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("Выбор", ТекущийТокен);
	ЭлементМодели.Вставить("ВыражениеВыбора");
	ЭлементМодели.Вставить("АльтернативыВыбора", Новый Массив());
	ЭлементМодели.Вставить("Иначе");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйАльтернативыВыбора(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = Новый Массив;
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйАльтернативаВыбора(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("АльтернативаВыбора", ТекущийТокен);
	ЭлементМодели.Вставить("Условие");
	ЭлементМодели.Вставить("Действие");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйКонстанта(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("Константа", ТекущийТокен);
	ЭлементМодели.Вставить("Значение");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйПараметрЗапроса(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ПараметрЗапроса", ТекущийТокен);
	ЭлементМодели.Вставить("Имя", "");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйАгрегатнаяФункция(ТекущийТокен = Неопределено) Экспорт 
	ЭлементМодели = НовыйЭлементМоделиЗапроса("АгрегатнаяФункция", ТекущийТокен);
	ЭлементМодели.Вставить("ИмяФункции");
	ЭлементМодели.Вставить("Аргумент");
	Возврат ЭлементМодели;
КонецФункции	

Функция НовыйАгрегатнаяФункцияКоличество(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("АгрегатнаяФункцияКоличество", ТекущийТокен);
	ЭлементМодели.Вставить("Различные", Ложь);
	ЭлементМодели.Вставить("Аргумент");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияПодстрока(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ФункцияПодстрока", ТекущийТокен);
	ЭлементМодели.Вставить("Строка");
	ЭлементМодели.Вставить("НачальнаяПозиция", 0);
	ЭлементМодели.Вставить("КоличествоСимволов");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияЧастьПериодаЧислом(ИмяФункции, ТекущийТокен)
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ФункцияЧастьПериодаЧислом", ТекущийТокен);
	ЭлементМодели.Вставить("ИмяФункции", ИмяФункции);
	ЭлементМодели.Вставить("Аргумент");
	Возврат ЭлементМодели;
КонецФункции	

Функция НовыйФункцияГод(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйФункцияЧастьПериодаЧислом("Год", ТекущийТокен);
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияКвартал(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйФункцияЧастьПериодаЧислом("Квартал", ТекущийТокен);
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияМесяц(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйФункцияЧастьПериодаЧислом("Месяц", ТекущийТокен);
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияДеньГода(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйФункцияЧастьПериодаЧислом("ДеньГода", ТекущийТокен);
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияДень(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйФункцияЧастьПериодаЧислом("День", ТекущийТокен);
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияДеньМесяца(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйФункцияЧастьПериодаЧислом("ДеньМесяца", ТекущийТокен);
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияДеньНедели(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйФункцияЧастьПериодаЧислом("ДеньНедели", ТекущийТокен);
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияЧас(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйФункцияЧастьПериодаЧислом("Час", ТекущийТокен);
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияМинута(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйФункцияЧастьПериодаЧислом("Минута", ТекущийТокен);
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияСекунда(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйФункцияЧастьПериодаЧислом("Секунда", ТекущийТокен);
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияНачалоПериода(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ФункцияНачалоПериода", ТекущийТокен);
	ЭлементМодели.Вставить("Дата");
	ЭлементМодели.Вставить("ТипПериода");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияКонецПериода(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ФункцияКонецПериода", ТекущийТокен);
	ЭлементМодели.Вставить("Дата");
	ЭлементМодели.Вставить("ТипПериода");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияДобавитьКДате(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ФункцияДобавитьКДате", ТекущийТокен);
	ЭлементМодели.Вставить("Дата");
	ЭлементМодели.Вставить("ТипПериода");
	ЭлементМодели.Вставить("Сдвиг");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияРазностьДат(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ФункцияРазностьДат", ТекущийТокен);
	ЭлементМодели.Вставить("Дата1");
	ЭлементМодели.Вставить("Дата2");
	ЭлементМодели.Вставить("ТипПериода");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияIsNull(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ФункцияIsNull", ТекущийТокен);
	ЭлементМодели.Вставить("ПроверяемоеЗначение");
	ЭлементМодели.Вставить("Действие");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияПредставление(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ФункцияПредставление", ТекущийТокен);
	ЭлементМодели.Вставить("Аргумент");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияредставлениеСсылки(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ФункцияПредставлениеСсылки", ТекущийТокен);
	ЭлементМодели.Вставить("Аргумент");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияТипЗначения(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ФункцияТипЗначения", ТекущийТокен);
	ЭлементМодели.Вставить("Аргумент");
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияДатаВремя(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ФункцияДатаВремя", ТекущийТокен);
	ЭлементМодели.Вставить("Аргументы", Новый Массив());
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияЗначение(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ФункцияЗначение", ТекущийТокен);
	ЭлементМодели.Вставить("ЧастиПути", Новый Массив);
	Возврат ЭлементМодели;
КонецФункции

Функция НовыйФункцияТип(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ФункцияТип", ТекущийТокен);
	ЭлементМодели.Вставить("Аргумент");
	Возврат ЭлементМодели;
КонецФункции

// Новый исполняемое представление.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый исполняемое представление:
// * Тип - Строка - 
// * ИмяТаблицы - Строка
// * ВТФильтр - см. НовыйПарараметрИсполянегоПредставленияВТФильтр
// * Параметры - Массив из см. НовыйПарараметрИсполянегоПредставленияКонстанта 
// * Псевдоним - Строка - 
// * ИмяОбработчика - Строка
Функция НовыйИсполняемоеПредставление(ТекущийТокен = Неопределено) Экспорт 
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ИсполняемоеПредставление", ТекущийТокен); 

	ЭлементМодели.Вставить("ИмяТаблицы");  
	ЭлементМодели.Вставить("ВТФильтр"); 
	ЭлементМодели.Вставить("Параметры", Новый Массив);
	ЭлементМодели.Вставить("Псевдоним", ""); 
	ЭлементМодели.Вставить("ИмяОбработчика");
	
	Возврат ЭлементМодели;
КонецФункции

// Новый парараметр исполянего представления ВТФильтр.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый парараметр исполянего представления ВТФильтр:
// * Тип - Строка - 
// * Поля - Массив из Строка - 
// * ЗапросВыбора - см. НовыйЗапросВыбора 
Функция НовыйПарараметрИсполянегоПредставленияВТФильтр(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ПарараметрИсполянегоПредставленияВТФильтр", ТекущийТокен); 
 
	ЭлементМодели.Вставить("Поля", Новый Массив);
	ЭлементМодели.Вставить("ЗапросВыбора");  	
	
	Возврат ЭлементМодели;
КонецФункции

// Новый парараметр исполянего представления константа.
// 
// Параметры:
//  ТекущийТокен - Неопределено - Текущий токен
// 
// Возвращаемое значение:
//  Структура - Новый парараметр исполянего представления константа:
// * Тип - Строка -
// * Имя - Строка - 
// * Значение - Произвольный  
// * ЭтоПараметрЗапроса - Булево - 
Функция НовыйПарараметрИсполянегоПредставленияКонстанта(ТекущийТокен = Неопределено) Экспорт
	ЭлементМодели = НовыйЭлементМоделиЗапроса("ПарараметрИсполянегоПредставленияКонстанта", ТекущийТокен); 
	ЭлементМодели.Вставить("Имя", "");
	ЭлементМодели.Вставить("Значение");
	ЭлементМодели.Вставить("ЭтоПараметрЗапроса", Ложь);
	
	Возврат ЭлементМодели;
КонецФункции

// Новый описание параметра запроса.
// 
// Возвращаемое значение:
//  Структура - Новы описание параметра запроса:
// * Тип - Строка - 
// * Имя - Строка - 
// * ТипЗначения - ОписаниеТипов, 
// * ЭтоСписокЗначений - Булево
Функция НовыйОписаниеПараметраЗапроса() Экспорт
	Элемент = НовыйЭлементМоделиЗапроса("ОписаниеПараметраЗапроса");

	Элемент.Вставить("Имя", "");
	Элемент.Вставить("ТипЗначения");
	Элемент.Вставить("ЭтоСписокЗначений", Ложь);
	
	Возврат Элемент;
КонецФункции

#КонецОбласти