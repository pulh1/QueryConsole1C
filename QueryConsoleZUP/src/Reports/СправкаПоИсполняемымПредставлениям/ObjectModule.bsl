
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ВнешниеНаборыДанных = Новый Структура("ОписаниеПредставлений", ДанныеОписанияПредставлений());
	
	НастройкиОтчета = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	МакетКомпоновки = ЗарплатаКадрыОтчеты.МакетКомпоновкиДанных(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

Функция ДанныеОписанияПредставлений()
	Данные = Новый ТаблицаЗначений();
	Данные.Колонки.Добавить("ИмяПредставления", Новый ОписаниеТипов("Строка"));
	Данные.Колонки.Добавить("РодительскаяПодсистема", Новый ОписаниеТипов("Строка"));
	Данные.Колонки.Добавить("Описание", Новый ОписаниеТипов("Строка"));
	
	ИменаОбработокПоПодсистемам = ПоставщикИсполняемыхПредставлений.ИменаОбработокИсполняемыхПредставленийПоПодсистемам();
	
	Для Каждого КлючЗначение Из ИменаОбработокПоПодсистемам Цикл
		Для Каждого ИмяОбработки Из КлючЗначение.Значение Цикл
			Справка = Обработки[ИмяОбработки].Справка();
			
			СтрокаТаблицы = Данные.Добавить();
			СтрокаТаблицы.ИмяПредставления = Справка.Имя;
			СтрокаТаблицы.РодительскаяПодсистема = КлючЗначение.Ключ;
			СтрокаТаблицы.Описание = Справка.Описание;	
		КонецЦикла;
	КонецЦикла;
	
	Возврат Данные;
КонецФункции

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
