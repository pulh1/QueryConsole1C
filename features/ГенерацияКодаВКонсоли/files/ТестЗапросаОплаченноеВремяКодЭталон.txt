Функция ПолучитьДанные(НачалоПериода, ОкончаниеПериода, Организация, СписокСотр)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СписокСотр", СписокСотр);
	ЗапросНачисленияУдержания = Новый Запрос();
	ЗапросНачисленияУдержания.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросНачисленияУдержания.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 0
	|	датавремя(1, 1, 1) как МесяцНачисления,
	|	ЗНАЧЕНИЕ(Документ.НачислениеЗарплаты.ПустаяСсылка) как Регистратор,
	|	ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка) как Сотрудник,
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) как Организация,
	|	ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) как Подразделение,
	|	ЗНАЧЕНИЕ(ПланВидовРасчета.Начисления.ПустаяСсылка) как ВидРасчета,
	|	0 как ИдентификаторСтроки,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиФинансированияЗарплата.ПустаяСсылка) как СтатьяФинансирования,
	|	ЗНАЧЕНИЕ(Справочник.СтатьиРасходовЗарплата.ПустаяСсылка) как СтатьяРасходов
	|ПОМЕСТИТЬ ВТНачисленияУдержанияПустая";
	ЗапросНачисленияУдержания.Выполнить();

	ЗапросОплаченноеВремя = ЗарплатаКадрыОбщиеНаборыДанных.ЗапросВТПредставленияОтработанноеВремя(
		"ВТНачисленияУдержанияПустая", 
		НачалоПериода, 
		ОкончаниеПериода, 
		"ВТОплаченноеВремя");

	ИспользуемыеПоля = Новый Соответствие();
	ИспользуемыеПоля.Вставить("ОТРАБОТАНОДНЕЙ", Истина);
	ИспользуемыеПоля.Вставить("ВИДРАСЧЕТА", Истина);
	ИспользуемыеПоля.Вставить("ПОДРАЗДЕЛЕНИЕ", Истина);
	ИспользуемыеПоля.Вставить("ОРГАНИЗАЦИЯ", Истина);
	ИспользуемыеПоля.Вставить("ВРЕМЯВЧАСАХ", Истина);
	ИспользуемыеПоля.Вставить("РЕГИСТРАТОР", Истина);
	ИспользуемыеПоля.Вставить("ОТРАБОТАНОЧАСОВ", Истина);
	ИспользуемыеПоля.Вставить("ПЕРИОДДЕЙСТВИЯ", Истина);
	ИспользуемыеПоля.Вставить("ДАТАНАЧАЛА", Истина);
	ИспользуемыеПоля.Вставить("МЕСЯЦНАЧИСЛЕНИЯ", Истина);
	ИспользуемыеПоля.Вставить("СОТРУДНИК", Истина);

	Схема = Новый СхемаЗапроса();
	Схема.УстановитьТекстЗапроса(ЗапросОплаченноеВремя.Текст);
	Для Каждого ЗапросПакета Из Схема.ПакетЗапросов Цикл
		Если ТипЗнч(ЗапросПакета) = Тип("ЗапросВыбораСхемыЗапроса")
			И ЗапросПакета.ТаблицаДляПомещения = "ВТОплаченноеВремя" Тогда
				
			ЗапросПакета.ТаблицаДляПомещения = "";
			Колонки = ЗапросПакета.Колонки;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	СКД = Новый СхемаКомпоновкиДанных();
	Источник = СКД.ИсточникиДанных.Добавить();
	Источник.Имя = "Источник";
	Источник.ТипИсточникаДанных = "local";
	НаборСКД = СКД.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборСКД.АвтоЗаполнениеДоступныхПолей = Истина;
	НаборСКД.Запрос = Схема.ПолучитьТекстЗапроса();
	НаборСКД.Имя = "ОплаченноеВремя";
	НаборСКД.ИсточникДанных = Источник.Имя;
	НастройкиСКД = СКД.ВариантыНастроек.Добавить().Настройки;
	
	Группа = НастройкиСКД.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	
	Для Каждого Колонка Из Колонки Цикл
		Если ИспользуемыеПоля.Получить(ВРег(Колонка.Псевдоним)) <> Неопределено Тогда
			Поле = Группа.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			Поле.Поле = Новый ПолеКомпоновкиДанных(Колонка.Псевдоним);
			Поле.Использование = Истина;
		КонецЕсли;
	КонецЦикла;

	Отбор = НастройкиСКД.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация");
	Отбор.ПравоеЗначение = Организация;

	Отбор = НастройкиСКД.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
	Отбор.Использование = Истина;
	Если ТипЗнч(СписокСотр) = Тип("СправочникСсылка.Сотрудники") Тогда
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Иначе
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;	
	КонецЕсли;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Сотрудник");
	Отбор.ПравоеЗначение = СписокСотр;

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СКД, НастройкиСКД);	
	
	Схема.УстановитьТекстЗапроса(МакетКомпоновкиДанных.НаборыДанных[0].Запрос);
	Для Каждого ЗапросПакета Из Схема.ПакетЗапросов Цикл
		Если ТипЗнч(ЗапросПакета) = Тип("ЗапросВыбораСхемыЗапроса")
			И Не ЗначениеЗаполнено(ЗапросПакета.ТаблицаДляПомещения) Тогда
			
			ЗапросПакета.ТаблицаДляПомещения = "ВТОплаченноеВремя";
			Колонки = ЗапросПакета.Колонки;
			
			ЗапросПакета.Операторы[0].Источники[0].Соединения[0].ТипСоединения = ТипСоединенияСхемыЗапроса.ЛевоеВнешнее;
			
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ЗапросОплаченноеВремя.Текст = Схема.ПолучитьТекстЗапроса();
	Для Каждого Параметр Из МакетКомпоновкиДанных.ЗначенияПараметров Цикл
		ЗапросОплаченноеВремя.УстановитьПараметр(Параметр.Имя, Параметр.Значение);	
	КонецЦикла;
		
	ЗапросОплаченноеВремя.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;
	ЗапросОплаченноеВремя.Выполнить();
	
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, "ВТНачисленияУдержанияПустая", Ложь);


	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОплаченноеВремя.Сотрудник КАК Сотрудник,
	|	ОплаченноеВремя.МесяцНачисления КАК МесяцНачисления,
	|	ОплаченноеВремя.ПериодДействия КАК ПериодДействия,
	|	ОплаченноеВремя.Регистратор КАК Регистратор,
	|	ОплаченноеВремя.Организация КАК Организация,
	|	ОплаченноеВремя.Подразделение КАК Подразделение,
	|	ОплаченноеВремя.ВидРасчета КАК ВидРасчета,
	|	ОплаченноеВремя.Регистратор КАК Регистратор1,
	|	ОплаченноеВремя.ДатаНачала КАК ДатаНачала,
	|	ОплаченноеВремя.ВремяВЧасах КАК ВремяВЧасах,
	|	ОплаченноеВремя.ОтработаноДней КАК ОтработаноДней,
	|	ОплаченноеВремя.ОтработаноЧасов КАК ОтработаноЧасов
	|ИЗ
	|	ВТОплаченноеВремя КАК ОплаченноеВремя";
	Возврат Запрос.Выполнить();
КонецФункции
