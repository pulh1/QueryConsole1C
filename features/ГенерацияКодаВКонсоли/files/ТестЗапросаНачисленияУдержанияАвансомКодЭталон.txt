Функция ПолучитьДанные(НачалоПериода, ОкончаниеПериода, Организация, СписокСотр)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СписокСотр", СписокСотр);
	ТекстЗапроса = ЗарплатаКадрыОбщиеНаборыДанныхПовтИсп.ПолучитьТекстОбщегоЗапроса(
		"НачисленияУдержанияАвансом", 
		Ложь);
	
	СКД = Новый СхемаКомпоновкиДанных();
	Источник = СКД.ИсточникиДанных.Добавить();
	Источник.Имя = "Источник";
	Источник.ТипИсточникаДанных = "local";
	НаборСКД = СКД.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборСКД.ИсточникДанных = "Источник";
	НаборСКД.Запрос = ТекстЗапроса;
	
	ЗарплатаКадрыОбщиеНаборыДанных.ЗаменитьПредставленияЗапросов(СКД.НаборыДанных, СКД);
	
	ЗапросНачисленияУдержания = Новый Запрос(НаборСКД.Запрос);
	ЗапросНачисленияУдержания.МенеджерВременныхТаблиц = Запрос.МенеджерВременныхТаблиц;

	НачалоПериода = НачалоПериода;
	ОкончаниеПериода = ОкончаниеПериода;
	ВыводитьОсновнойПоказательНачисленийИУдержаний = Истина;
	ВыводитьВсеПоказателиНачисленийИУдержаний = Истина;
	ВыводитьПериодыНачислений = Истина;

	ЗапросНачисленияУдержания.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ЗапросНачисленияУдержания.УстановитьПараметр("КонецПериода", ОкончаниеПериода);
	ЗапросНачисленияУдержания.УстановитьПараметр("ВыводитьПоказателиНачисленийИУдержаний", ВыводитьОсновнойПоказательНачисленийИУдержаний);
	ЗапросНачисленияУдержания.УстановитьПараметр("ВыводитьВсеПоказателиНачисленийИУдержаний", ВыводитьВсеПоказателиНачисленийИУдержаний);
	ЗапросНачисленияУдержания.УстановитьПараметр("ВыводитьПериодыНачислений", ВыводитьПериодыНачислений);
	ЗапросНачисленияУдержания.УстановитьПараметр("ИсключаемыеСсылки", Новый Массив());
	ЗапросНачисленияУдержания.УстановитьПараметр("ДетализироватьНачисленияПоСреднемуЗаработку", Ложь);
	
	Для Каждого Параметр Из СКД.Параметры Цикл
		ЗапросНачисленияУдержания.УстановитьПараметр(Параметр.Имя, Параметр.Значение);
	КонецЦикла;
	
	// установим отборы
	
	Схема = Новый СхемаЗапроса();
	Схема.УстановитьТекстЗапроса(ЗапросНачисленияУдержания.Текст);
	Для Каждого ЗапросПакета Из Схема.ПакетЗапросов Цикл
		Если ТипЗнч(ЗапросПакета) = Тип("ЗапросВыбораСхемыЗапроса")
			И ЗапросПакета.ТаблицаДляПомещения = "ОбщиеЗапросы_НачисленияУдержанияАвансом" Тогда
				
			ЗапросПакета.ТаблицаДляПомещения = "";
			Колонки = ЗапросПакета.Колонки;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	НаборСКД.Запрос = Схема.ПолучитьТекстЗапроса();
	
	НастройкиСКД = СКД.ВариантыНастроек.Добавить().Настройки;
	Группа = НастройкиСКД.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));

	ИспользуемыеПоля = Новый Соответствие();
	ИспользуемыеПоля.Вставить("ПОРЯДОКПОКАЗАТЕЛЕЙ", Истина);
	ИспользуемыеПоля.Вставить("СТОРНО", Истина);
	ИспользуемыеПоля.Вставить("ПОКАЗАТЕЛЬ", Истина);
	ИспользуемыеПоля.Вставить("ВРЕМЯВЧАСАХ", Истина);
	ИспользуемыеПоля.Вставить("ОТРАБОТАНОДНЕЙ", Истина);
	ИспользуемыеПоля.Вставить("ВИДРАСЧЕТА", Истина);
	ИспользуемыеПоля.Вставить("ДАТАОКОНЧАНИЯ", Истина);
	ИспользуемыеПоля.Вставить("ГРУППА", Истина);
	ИспользуемыеПоля.Вставить("ПОДРАЗДЕЛЕНИЕ", Истина);
	ИспользуемыеПоля.Вставить("РЕГИСТРАТОР", Истина);
	ИспользуемыеПоля.Вставить("ЗНАЧЕНИЕ", Истина);
	ИспользуемыеПоля.Вставить("ПЕРИОДДЕЙСТВИЯ", Истина);
	ИспользуемыеПоля.Вставить("ОТРАБОТАНОЧАСОВ", Истина);
	ИспользуемыеПоля.Вставить("ДАТАНАЧАЛА", Истина);
	ИспользуемыеПоля.Вставить("МЕСЯЦНАЧИСЛЕНИЯ", Истина);
	ИспользуемыеПоля.Вставить("ОПЛАЧЕНОЧАСОВ", Истина);
	ИспользуемыеПоля.Вставить("ОРГАНИЗАЦИЯ", Истина);
	ИспользуемыеПоля.Вставить("ГОЛОВНОЙСОТРУДНИК", Истина);
	ИспользуемыеПоля.Вставить("СОТРУДНИК", Истина);
	ИспользуемыеПоля.Вставить("ФИЗИЧЕСКОЕЛИЦО", Истина);
	ИспользуемыеПоля.Вставить("ОПЛАЧЕНОДНЕЙ", Истина);
	ИспользуемыеПоля.Вставить("СУММА", Истина);

	Для Каждого Колонка Из Колонки Цикл
		Если ИспользуемыеПоля.Получить(ВРег(Колонка.Псевдоним)) <> Неопределено Тогда
			Поле = Группа.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
			Поле.Поле = Новый ПолеКомпоновкиДанных(Колонка.Псевдоним);
			Поле.Использование = Истина;
		КонецЕсли;
	КонецЦикла;

	Отбор = НастройкиСКД.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
	Отбор.Использование = Истина;
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация");
	Отбор.ПравоеЗначение = Организация;

	Отбор = НастройкиСКД.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
	Отбор.Использование = Истина;
	Если ТипЗнч(СписокСотр) = Тип("СправочникСсылка.Сотрудники") Тогда
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Иначе
		Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;	
	КонецЕсли;
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Сотрудник");
	Отбор.ПравоеЗначение = СписокСотр;

	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СКД, НастройкиСКД);	
	
	Схема.УстановитьТекстЗапроса(МакетКомпоновкиДанных.НаборыДанных[0].Запрос);
	Для Каждого ЗапросПакета Из Схема.ПакетЗапросов Цикл
		Если ТипЗнч(ЗапросПакета) = Тип("ЗапросВыбораСхемыЗапроса")
			И Не ЗначениеЗаполнено(ЗапросПакета.ТаблицаДляПомещения) Тогда
			
			ЗапросПакета.ТаблицаДляПомещения = "ВТНачисленияУдержания";
			
			ЗапросПакета.Операторы[0].Источники[0].Соединения[0].ТипСоединения = ТипСоединенияСхемыЗапроса.ЛевоеВнешнее;
			
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ЗапросНачисленияУдержания.Текст = Схема.ПолучитьТекстЗапроса();
	Для Каждого Параметр Из МакетКомпоновкиДанных.ЗначенияПараметров Цикл
		ЗапросНачисленияУдержания.УстановитьПараметр(Параметр.Имя, Параметр.Значение);	
	КонецЦикла;
		
	ЗапросНачисленияУдержания.Выполнить();

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачисленияУдержания.Сотрудник КАК Сотрудник,
	|	НачисленияУдержания.ГоловнойСотрудник КАК ГоловнойСотрудник,
	|	НачисленияУдержания.МесяцНачисления КАК МесяцНачисления,
	|	НачисленияУдержания.ПериодДействия КАК ПериодДействия,
	|	НачисленияУдержания.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НачисленияУдержания.Регистратор КАК Регистратор,
	|	НачисленияУдержания.Организация КАК Организация,
	|	НачисленияУдержания.Подразделение КАК Подразделение,
	|	НачисленияУдержания.Группа КАК Группа,
	|	НачисленияУдержания.ВидРасчета КАК ВидРасчета,
	|	НачисленияУдержания.Сумма КАК Сумма,
	|	НачисленияУдержания.ДатаНачала КАК ДатаНачала,
	|	НачисленияУдержания.ДатаОкончания КАК ДатаОкончания,
	|	НачисленияУдержания.ОтработаноДней КАК ОтработаноДней,
	|	НачисленияУдержания.ОтработаноЧасов КАК ОтработаноЧасов,
	|	НачисленияУдержания.ОплаченоДней КАК ОплаченоДней,
	|	НачисленияУдержания.ОплаченоЧасов КАК ОплаченоЧасов,
	|	НачисленияУдержания.ВремяВЧасах КАК ВремяВЧасах,
	|	НачисленияУдержания.Показатель КАК Показатель,
	|	НачисленияУдержания.Значение КАК Значение,
	|	НачисленияУдержания.ПорядокПоказателей КАК ПорядокПоказателей,
	|	НачисленияУдержания.Сторно КАК Сторно
	|ИЗ
	|	ВТНачисленияУдержания КАК НачисленияУдержания";
	Возврат Запрос.Выполнить();
КонецФункции
